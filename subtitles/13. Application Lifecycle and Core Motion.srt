1
00:00:00,001 --> 00:00:01,033
[MUSIC]

2
00:00:01,035 --> 00:00:01,599
Stanford University.

3
00:00:04,938 --> 00:00:10,341
>> All right, well, welcome to Lecture 13 of CS193P,

4
00:00:10,343 --> 00:00:12,976
Winter 2015.

5
00:00:12,978 --> 00:00:15,311
Today, we have three major topics.

6
00:00:15,313 --> 00:00:18,047
One which is the Application Lifecycle, which is all about

7
00:00:18,049 --> 00:00:20,783
we talked about the View Controller Lifecycle.

8
00:00:21,852 --> 00:00:24,286
Where your view controller kinda is born,

9
00:00:24,288 --> 00:00:26,121
does a bunch of things and then, dies.

10
00:00:26,123 --> 00:00:28,690
Well, the same things happen for the whole application.

11
00:00:28,692 --> 00:00:30,257
So we'll talk about that.

12
00:00:30,259 --> 00:00:32,860
And then, I'm going to talk about Core Motion,

13
00:00:32,862 --> 00:00:35,562
which is figuring out what the device is doing.

14
00:00:35,564 --> 00:00:39,532
Gyro, and accelerometer, magnetometers,

15
00:00:39,534 --> 00:00:40,666
all that business.

16
00:00:40,668 --> 00:00:43,535
And then, I'm going to talk about persistence,

17
00:00:43,537 --> 00:00:46,571
which is making things be stored on the internal hard

18
00:00:46,573 --> 00:00:47,806
disk of your device.

19
00:00:47,808 --> 00:00:50,241
Of course, it's flash memory, but

20
00:00:50,243 --> 00:00:53,911
basically it acts a hard disk, a Unix file system even.

21
00:00:53,913 --> 00:00:57,114
So we talk about how we do that.

22
00:00:57,116 --> 00:00:58,382
All right, so let's jump right

23
00:00:58,384 --> 00:00:59,849
into the application life cycle.

24
00:00:59,851 --> 00:01:02,485
But we first, I need to give you a little side

25
00:01:03,921 --> 00:01:06,288
lecture here on NSNotification.

26
00:01:06,290 --> 00:01:08,723
And we actually saw this briefly

27
00:01:08,725 --> 00:01:10,825
when I was talking about the keyboards.

28
00:01:10,827 --> 00:01:13,427
And you get this notification when the keyboards show up.

29
00:01:13,429 --> 00:01:15,929
But I decided I'm going to take a couple of slides here

30
00:01:15,931 --> 00:01:17,698
and just talk about NSNotification and

31
00:01:17,700 --> 00:01:19,299
how it works.

32
00:01:19,300 --> 00:01:20,899
Because it's actually a fairly important part.

33
00:01:20,902 --> 00:01:22,519
Not fairly important,

34
00:01:22,520 --> 00:01:24,137
somewhat important part of the MVC model.

35
00:01:24,139 --> 00:01:26,505
So if you remember back to our MVC slides.

36
00:01:26,507 --> 00:01:29,074
I had a little kinda thing that looked like a radio

37
00:01:29,076 --> 00:01:30,459
station.

38
00:01:30,460 --> 00:01:31,843
It was broadcasting from the model.

39
00:01:31,845 --> 00:01:34,045
And then the controller would tune into that radio station

40
00:01:34,047 --> 00:01:36,814
to find out that changes were happening in the model.

41
00:01:36,816 --> 00:01:38,115
Well that's,

42
00:01:38,117 --> 00:01:41,352
one of the things that make that happen is NSNotification.

43
00:01:41,354 --> 00:01:43,387
And so, it's the radio station or

44
00:01:43,389 --> 00:01:47,023
one of the ways of doing the radio station in MVC.

45
00:01:47,025 --> 00:01:51,627
And it's really for model to controller communication or

46
00:01:51,629 --> 00:01:54,363
sometimes global to controller.

47
00:01:54,365 --> 00:01:57,232
Cuz sometimes things happen globally in your entire

48
00:01:57,234 --> 00:01:59,701
application, as we're gonna see in the demo today.

49
00:01:59,703 --> 00:02:01,669
And you need to kinda broadcast that this global

50
00:02:01,671 --> 00:02:02,920
thing is happening.

51
00:02:02,921 --> 00:02:04,170
And then particular view controllers might

52
00:02:04,173 --> 00:02:05,305
be interested in that.

53
00:02:05,307 --> 00:02:07,074
They'll sign up to listen to that radio station and

54
00:02:07,076 --> 00:02:10,410
they'll find out that global thing has happened.

55
00:02:10,412 --> 00:02:11,978
So how does it work?

56
00:02:11,980 --> 00:02:13,446
It's super simple.

57
00:02:13,448 --> 00:02:16,048
There is a class called NSNotificationCenter

58
00:02:16,050 --> 00:02:18,483
it has a class function called defaultCenter.

59
00:02:18,485 --> 00:02:20,268
You get that,

60
00:02:20,269 --> 00:02:22,052
that's this kinda shared notification center.

61
00:02:22,055 --> 00:02:24,989
And you just send a message to it called addObserver

62
00:02:24,991 --> 00:02:26,157
for name.

63
00:02:26,159 --> 00:02:28,692
And you specify the name of the radio station you

64
00:02:28,694 --> 00:02:30,027
wanna listen to.

65
00:02:30,029 --> 00:02:31,545
Okay.

66
00:02:31,546 --> 00:02:33,062
It has a couple other arguments which are,

67
00:02:33,065 --> 00:02:34,965
is object.

68
00:02:34,966 --> 00:02:36,866
Object is who's the broadcaster.

69
00:02:36,868 --> 00:02:40,102
Who are you interested in broadcasts on this

70
00:02:40,104 --> 00:02:41,721
radio station from?

71
00:02:41,722 --> 00:02:43,339
And you can just put nil there if you're interested

72
00:02:43,341 --> 00:02:46,174
when anybody broadcasts on that radio station.

73
00:02:46,176 --> 00:02:48,176
But sometimes you'll specify I'm only interested if

74
00:02:48,178 --> 00:02:50,745
this guy broadcasts on this radio station.

75
00:02:50,747 --> 00:02:53,647
And then, notice that there's a queue.

76
00:02:53,649 --> 00:02:55,849
And then a closure right after it.

77
00:02:55,851 --> 00:02:56,850
Okay. Queue and a closure.

78
00:02:56,852 --> 00:02:58,084
So the queue is just saying

79
00:02:58,086 --> 00:03:00,987
what queue you want after this closure to be executed on.

80
00:03:00,989 --> 00:03:03,489
I think if you put nil there you get I think

81
00:03:03,491 --> 00:03:04,823
the main queue.

82
00:03:04,825 --> 00:03:07,359
Possibly the current queue, but maybe the main queue.

83
00:03:07,361 --> 00:03:09,094
But might as well just put it in there.

84
00:03:09,096 --> 00:03:10,895
Now notice NSOperationQueue,

85
00:03:10,897 --> 00:03:13,931
I briefly mentioned that earlier in the quarter too.

86
00:03:13,933 --> 00:03:18,869
You're used to dispatch_queue_t, that thing.

87
00:03:18,871 --> 00:03:23,539
NSOperationQueue is just kinda an object oriented API on top

88
00:03:23,541 --> 00:03:26,375
of the whole dispatching business.

89
00:03:26,377 --> 00:03:28,577
GCD, Grand Central Dispatch.

90
00:03:28,579 --> 00:03:32,881
So, it's very thin layer looks almost exactly the same.

91
00:03:32,883 --> 00:03:35,450
But object oriented APIs usually will ask for

92
00:03:35,452 --> 00:03:37,518
a NSOperationQueue.

93
00:03:37,520 --> 00:03:40,754
That has a couple of class functions like main queue,

94
00:03:40,756 --> 00:03:42,789
where you can get the main queue.

95
00:03:42,791 --> 00:03:44,891
And you can create your own queues by just saying

96
00:03:44,893 --> 00:03:46,492
NSOperationQueue open parentheses

97
00:03:46,494 --> 00:03:48,961
close parentheses to initialize it.

98
00:03:48,963 --> 00:03:50,262
So anyway, specify the queue you want.

99
00:03:50,264 --> 00:03:52,330
And then, what's gonna happen is,

100
00:03:52,332 --> 00:03:54,866
if anyone broadcasts on that radio station,

101
00:03:54,868 --> 00:03:58,136
the following closure is going to be executed.

102
00:03:58,138 --> 00:03:59,937
And that closure only has one argument there,

103
00:03:59,939 --> 00:04:02,473
which is an NSNotification.

104
00:04:02,475 --> 00:04:04,808
That NSNotification has a few fields in it.

105
00:04:04,810 --> 00:04:06,910
But the really only interesting field is

106
00:04:06,912 --> 00:04:09,612
the field called userInfo.

107
00:04:09,614 --> 00:04:11,313
And the userInfo is just a dictionary.

108
00:04:11,315 --> 00:04:14,850
The dictionary of kinda old style, Objective-C dictionary

109
00:04:14,852 --> 00:04:18,720
with NSObject as the keys, AnyObject as the values.

110
00:04:18,722 --> 00:04:22,123
And every radio station it broadcasts

111
00:04:22,125 --> 00:04:24,525
is going to have kinda different userInfo.

112
00:04:24,527 --> 00:04:26,827
And when you go and look at the documentation for

113
00:04:26,829 --> 00:04:27,861
that radio station.

114
00:04:27,863 --> 00:04:29,529
Which is going to tell you the name,

115
00:04:29,531 --> 00:04:31,664
that you're going to addObserver for name.

116
00:04:31,666 --> 00:04:34,233
It's also going to tell you what it provides you in

117
00:04:34,235 --> 00:04:35,701
it's userInfo.

118
00:04:35,703 --> 00:04:38,404
Okay, so let's look at an example of doing this.

119
00:04:38,406 --> 00:04:40,872
So you can kinda make it more concrete.

120
00:04:40,874 --> 00:04:45,743
Which is finding out when the user changes their text size.

121
00:04:45,745 --> 00:04:48,913
So in Settings, here I'm just in Settings on a phone.

122
00:04:48,915 --> 00:04:52,549
If I go to General Settings right here and

123
00:04:52,551 --> 00:04:58,021
I go down to Accessibility, then I go down to Larger Text.

124
00:04:58,023 --> 00:05:00,857
You can see there's this slider here, which I can

125
00:05:00,859 --> 00:05:04,960
use to set the size of the text that I want in my apps.

126
00:05:04,962 --> 00:05:08,230
Well, if you have an app that has text in it, or

127
00:05:08,232 --> 00:05:12,266
that is sized depending on the setting of this,

128
00:05:12,268 --> 00:05:14,268
you might want to react to that.

129
00:05:14,270 --> 00:05:17,805
Well the way you get notified of that is you get

130
00:05:17,807 --> 00:05:19,740
a broadcast on a radio station.

131
00:05:19,742 --> 00:05:22,942
The radio station is called the UI content size category

132
00:05:22,944 --> 00:05:25,845
did change notification radio station, 'kay?

133
00:05:25,847 --> 00:05:27,213
That's the name of it.

134
00:05:27,215 --> 00:05:29,481
Radio station is just something I use.

135
00:05:29,483 --> 00:05:31,450
It's not really called radio station, okay?

136
00:05:31,452 --> 00:05:33,485
So, that's the name of it, and

137
00:05:33,487 --> 00:05:36,354
it's sent out by the UIApplication object.

138
00:05:36,356 --> 00:05:38,189
Of which there's this one shared application,

139
00:05:38,191 --> 00:05:40,057
which you get by calling that method right there,

140
00:05:40,059 --> 00:05:41,358
sharedApplication.

141
00:05:41,360 --> 00:05:44,961
And I wanna hear about this on the main queue, okay?

142
00:05:44,963 --> 00:05:46,529
So I have my block.

143
00:05:46,531 --> 00:05:47,896
It gets this notification argument.

144
00:05:47,898 --> 00:05:50,432
Inside the notification argument there's the userInfo.

145
00:05:50,434 --> 00:05:54,535
And it turns out this radio station, when it broadcasts,

146
00:05:54,537 --> 00:05:56,370
the userInfo contains the

147
00:05:56,372 --> 00:05:59,206
UIContentSizeCategoryNewValue- Key.

148
00:05:59,208 --> 00:06:01,775
And if I get that key out of the dictionary,

149
00:06:01,777 --> 00:06:03,410
the value I get is the size.

150
00:06:03,412 --> 00:06:06,746
And there's a bunch of enums or strings for

151
00:06:06,748 --> 00:06:09,882
it like UIContentSizeCategorySmall or

152
00:06:09,884 --> 00:06:13,185
UIContentSizeExtraLarge or whatever.

153
00:06:13,187 --> 00:06:15,354
So that's how you get it.

154
00:06:15,356 --> 00:06:18,056
And so this could come at anytime because the user could

155
00:06:18,058 --> 00:06:20,558
go to settings and set this at anytime.

156
00:06:20,560 --> 00:06:23,127
And you'll just get this closure executed.

157
00:06:23,129 --> 00:06:25,863
And it can be executed multiple times once you

158
00:06:25,865 --> 00:06:28,766
register this.

159
00:06:28,767 --> 00:06:31,668
Then it's going to get called whenever that thing changes.

160
00:06:31,670 --> 00:06:32,902
That make sense?

161
00:06:32,904 --> 00:06:36,805
So there's a lot of radio stations in iOS.

162
00:06:36,807 --> 00:06:38,407
We're going to talk about Core Data,

163
00:06:38,409 --> 00:06:40,275
object-oriented database for example.

164
00:06:40,277 --> 00:06:42,510
That got some very important notifications where it tells

165
00:06:42,512 --> 00:06:44,145
you that things have changed in the database.

166
00:06:44,147 --> 00:06:45,846
That's the classic model.

167
00:06:45,848 --> 00:06:47,180
Communicating to the controllers.

168
00:06:47,182 --> 00:06:49,082
And I'm going to do a little demo where we're gonna

169
00:06:49,084 --> 00:06:51,317
broadcast on our own radio station.

170
00:06:51,319 --> 00:06:53,185
And I'm missing a slide in here,

171
00:06:53,187 --> 00:06:55,721
I noticed, which is how to broadcast.

172
00:06:55,723 --> 00:06:57,456
But broadcasting is very easy,

173
00:06:57,458 --> 00:07:00,458
you just create one of these NSNotification objects.

174
00:07:00,460 --> 00:07:02,493
And then, you ask the defaultCenter,

175
00:07:02,495 --> 00:07:03,627
postNotification.

176
00:07:03,629 --> 00:07:05,496
So it's a method in the defaultCenter called

177
00:07:05,498 --> 00:07:07,431
postNotification, you just give it a notification,

178
00:07:07,433 --> 00:07:09,966
it'll broadcast it, simple as that.

179
00:07:09,968 --> 00:07:12,568
So we'll see that in the demo as well.

180
00:07:12,570 --> 00:07:14,303
Okay, so that's notifications.

181
00:07:14,305 --> 00:07:15,804
And they're important in the application

182
00:07:15,806 --> 00:07:17,105
life cycle as you're going to see.

183
00:07:17,107 --> 00:07:20,475
So let's talk about the application life cycle.

184
00:07:20,477 --> 00:07:23,277
Really your application gets launched.

185
00:07:23,279 --> 00:07:24,712
The user is using it.

186
00:07:24,714 --> 00:07:26,814
Then the user clicks to go to a different app.

187
00:07:26,816 --> 00:07:29,049
And they come back to your app.

188
00:07:29,051 --> 00:07:31,918
Maybe, your app starts using a lot of memory.

189
00:07:31,920 --> 00:07:34,454
Or does something else, that the system doesn't like.

190
00:07:34,456 --> 00:07:37,723
Or the phone runs out of power.

191
00:07:37,725 --> 00:07:40,025
And you get killed, okay?

192
00:07:40,027 --> 00:07:42,060
And so, that's kinda the life cycle.

193
00:07:42,062 --> 00:07:43,295
And you go back and

194
00:07:43,296 --> 00:07:44,529
forth between being in the foreground,

195
00:07:44,531 --> 00:07:45,697
which means the user's using you.

196
00:07:45,699 --> 00:07:46,964
And being in the background,

197
00:07:46,966 --> 00:07:48,932
which means the user's using something else.

198
00:07:48,934 --> 00:07:51,301
That's the green versus blue in this picture.

199
00:07:51,303 --> 00:07:53,870
But you transition from these states in a very orderly

200
00:07:53,872 --> 00:07:54,888
fashion.

201
00:07:54,889 --> 00:07:55,905
And we're going to talk about that transition.

202
00:07:55,907 --> 00:07:56,605
So.

203
00:07:56,607 --> 00:07:58,073
In the green area, so

204
00:07:58,074 --> 00:07:59,540
you start out not running, that's at the top.

205
00:07:59,543 --> 00:08:01,443
Obviously, your app is not even running at all.

206
00:08:01,445 --> 00:08:03,011
Okay? Then you move to this

207
00:08:03,013 --> 00:08:06,747
foreground state where you're, you start out inactive,

208
00:08:06,749 --> 00:08:08,716
which means you're running.

209
00:08:08,718 --> 00:08:10,083
Your code is running, but

210
00:08:10,085 --> 00:08:12,018
you're not getting any UI events.

211
00:08:12,020 --> 00:08:13,486
Okay. You're not really displayed

212
00:08:13,488 --> 00:08:14,920
onscreen and getting touch events yet.

213
00:08:14,922 --> 00:08:16,855
But you started up, you started running.

214
00:08:16,857 --> 00:08:19,458
Then you move to this state where you're active,

215
00:08:19,460 --> 00:08:21,726
which is your view controller is on screen,

216
00:08:21,728 --> 00:08:23,261
it's getting touch events.

217
00:08:23,263 --> 00:08:24,695
This is normal mode.

218
00:08:24,697 --> 00:08:26,319
Okay?

219
00:08:26,320 --> 00:08:27,942
This is what you're used to.

220
00:08:27,943 --> 00:08:29,565
This is where you are most of the time that your code

221
00:08:29,568 --> 00:08:31,268
is running.

222
00:08:31,269 --> 00:08:32,969
But if the user clicks on another app,

223
00:08:32,971 --> 00:08:36,439
then you can move to this state called the background

224
00:08:36,441 --> 00:08:39,275
where you'll run for a very brief period.

225
00:08:39,277 --> 00:08:41,243
I could be incredibly brief and

226
00:08:41,245 --> 00:08:43,479
then your code just stops running.

227
00:08:43,481 --> 00:08:46,048
Now you're not, you haven't been killed, but

228
00:08:46,050 --> 00:08:47,449
your code is not running.

229
00:08:47,451 --> 00:08:49,050
So there's nothing you can do in this state.

230
00:08:49,052 --> 00:08:51,118
Now when you transition to this background,

231
00:08:51,120 --> 00:08:52,686
you can ask for a little more time.

232
00:08:52,688 --> 00:08:55,188
But if you don't, you kinda quickly go to the state

233
00:08:55,190 --> 00:08:56,623
where you're not running.

234
00:08:56,625 --> 00:08:58,175
Okay.

235
00:08:58,176 --> 00:08:59,726
That's the suspended state down at the bottom.

236
00:08:59,728 --> 00:09:02,395
So you stay in this blue area for a short amount of time,

237
00:09:02,397 --> 00:09:03,629
this background state.

238
00:09:03,631 --> 00:09:06,565
Now you can be put into this blue area other times too.

239
00:09:06,567 --> 00:09:08,767
Like there's a way to tell the system, hey,

240
00:09:08,769 --> 00:09:10,702
I want to wake up every once in a while and

241
00:09:10,704 --> 00:09:12,837
go and fetch something from the internet.

242
00:09:12,839 --> 00:09:14,772
So that when the user does launch my app or

243
00:09:14,774 --> 00:09:16,173
bring it to the foreground,

244
00:09:16,175 --> 00:09:18,308
I have got the latest information for them.

245
00:09:18,310 --> 00:09:19,826
Okay?

246
00:09:19,827 --> 00:09:21,343
So the system can wake you up in the background.

247
00:09:21,346 --> 00:09:24,180
You'll run for a very short amount of time while you go do

248
00:09:24,182 --> 00:09:27,149
this little fetch and then you go back to suspended state.

249
00:09:27,151 --> 00:09:29,151
Okay?

250
00:09:29,152 --> 00:09:31,152
Now, while you're in the suspended state, okay?

251
00:09:31,155 --> 00:09:34,522
Down here and your code is not running at all.

252
00:09:34,524 --> 00:09:37,025
None of your code is being executed and

253
00:09:37,027 --> 00:09:39,026
you could be killed from here.

254
00:09:39,028 --> 00:09:42,162
So you wanna be careful when you move from the background

255
00:09:42,164 --> 00:09:45,198
state to the suspended state to clean everything up and

256
00:09:45,200 --> 00:09:47,334
get everything ready for your death.

257
00:09:47,336 --> 00:09:48,101
Okay?

258
00:09:48,103 --> 00:09:49,268
Cuz you might get killed.

259
00:09:49,270 --> 00:09:51,837
That's rare to get killed, but you could.

260
00:09:51,839 --> 00:09:53,289
Okay?

261
00:09:53,290 --> 00:09:54,740
So you have to think of being in suspended state as

262
00:09:54,742 --> 00:09:56,975
I'm suspended and I could be killed at any moment.

263
00:09:56,977 --> 00:09:59,277
So [LAUGH] you can't run any code when you're gonna be

264
00:09:59,279 --> 00:10:01,746
killed, so you better clean that up when you're passing

265
00:10:01,748 --> 00:10:04,048
through the back, creating through a background.

266
00:10:04,050 --> 00:10:05,383
Okay.

267
00:10:05,384 --> 00:10:06,717
So let's talk about how you find out,

268
00:10:06,719 --> 00:10:09,552
as you move through and you can only pass along the orange

269
00:10:09,554 --> 00:10:11,187
lines to get from these states.

270
00:10:11,189 --> 00:10:12,572
Okay? So

271
00:10:12,573 --> 00:10:13,956
when you come out of the background,

272
00:10:13,958 --> 00:10:16,959
you briefly will be inactive and then go to active.

273
00:10:16,961 --> 00:10:18,694
Right?

274
00:10:18,695 --> 00:10:20,428
So let's talk about how we pass through.

275
00:10:20,431 --> 00:10:23,999
So launching is just a matter of moving into the foreground,

276
00:10:24,001 --> 00:10:26,567
briefly inactive and then you're active.

277
00:10:26,569 --> 00:10:28,936
That's your application being launched.

278
00:10:28,938 --> 00:10:32,806
Switching to another app is you started out active,

279
00:10:32,808 --> 00:10:35,008
you go inactive for a moment.

280
00:10:35,010 --> 00:10:38,077
You come around, you're in background for a moment and

281
00:10:38,079 --> 00:10:41,047
then you go suspended while the other app gets to run.

282
00:10:41,049 --> 00:10:43,266
Okay?

283
00:10:43,267 --> 00:10:45,484
So that's the flow of switching to another app.

284
00:10:45,486 --> 00:10:47,853
Okay?

285
00:10:47,854 --> 00:10:50,221
Now every time you make a transition along these orange

286
00:10:50,223 --> 00:10:52,190
lines, you get notified.

287
00:10:52,192 --> 00:10:55,526
So let's talk about, for example, own's,

288
00:10:55,528 --> 00:10:56,894
of course killed.

289
00:10:56,896 --> 00:10:58,362
You can be killed, your code won't run.

290
00:10:58,364 --> 00:11:01,865
Be careful, be ready.

291
00:11:01,867 --> 00:11:02,799
All right. So let's talk about

292
00:11:02,801 --> 00:11:04,768
these transitions.

293
00:11:04,769 --> 00:11:06,736
So right there, the little yellow circle is talking about

294
00:11:06,738 --> 00:11:09,705
moving into this inactive state from not running.

295
00:11:09,707 --> 00:11:11,006
Okay? When that happens,

296
00:11:11,008 --> 00:11:13,541
you get sent this message to your application delegate.

297
00:11:13,543 --> 00:11:16,944
You remember that AppDelegate file that I always drag out of

298
00:11:16,946 --> 00:11:20,081
the way every single time at the beginning of my demos?

299
00:11:20,083 --> 00:11:22,883
Well, that file is an interesting file.

300
00:11:22,885 --> 00:11:25,118
It actually has a class in it called your AppDelegate.

301
00:11:25,120 --> 00:11:28,154
Your AppDelegate is the delegate of your UI

302
00:11:28,156 --> 00:11:31,924
application object and the UI application object,

303
00:11:31,926 --> 00:11:33,625
you never subclass it.

304
00:11:33,627 --> 00:11:36,094
If you want to customize its behavior, you do so

305
00:11:36,096 --> 00:11:38,563
by implementing methods in the AppDelegate.

306
00:11:38,565 --> 00:11:40,631
So one of the methods you can get sent,

307
00:11:40,633 --> 00:11:43,701
one of the delegate protocol methods for an application

308
00:11:43,703 --> 00:11:47,104
delegate is application did finish launching with options.

309
00:11:47,106 --> 00:11:48,939
And that gives you a dictionary,

310
00:11:48,941 --> 00:11:50,974
which we'll talk about in a second.

311
00:11:50,976 --> 00:11:52,241
And so that, so

312
00:11:52,243 --> 00:11:56,879
you're always gonna know the first time you startup from

313
00:11:56,881 --> 00:12:01,549
not being running at all to being in this inactive state.

314
00:12:01,551 --> 00:12:03,951
Now what's in the [INAUDIBLE] by the way,

315
00:12:03,953 --> 00:12:06,587
you get all these messages sent to you to your

316
00:12:06,589 --> 00:12:09,590
AppDelegate, but you also a get a notification.

317
00:12:09,592 --> 00:12:11,224
That we were talking about in previous slide.

318
00:12:11,226 --> 00:12:13,093
So you can sign up to listen to the radio station.

319
00:12:13,095 --> 00:12:15,628
UI application did finish launching notification and

320
00:12:15,630 --> 00:12:18,531
when you launch, you'll get a message on the radio station.

321
00:12:18,533 --> 00:12:20,666
Now that's only gonna happen once per launching of your

322
00:12:20,668 --> 00:12:22,201
app, obviously.

323
00:12:22,202 --> 00:12:23,735
And the user info in that notification,

324
00:12:23,737 --> 00:12:27,271
of course contains the same dictionary that's being passed

325
00:12:27,273 --> 00:12:28,239
to this method.

326
00:12:28,241 --> 00:12:29,840
Okay?

327
00:12:29,842 --> 00:12:32,009
So what's the difference between these two?

328
00:12:32,011 --> 00:12:35,879
Well, you know, if you put the code in your AppDelegate to

329
00:12:35,881 --> 00:12:39,148
find out that you've been launched, you know,

330
00:12:39,150 --> 00:12:41,217
it kinda has to be global code.

331
00:12:41,219 --> 00:12:43,236
Right? Because you're just,

332
00:12:43,237 --> 00:12:45,254
it's in you AppDelegate, it's kind of in this global place.

333
00:12:45,256 --> 00:12:48,623
Whereas if a particular view controller wanted to find out,

334
00:12:48,625 --> 00:12:49,891
oh, I just launched.

335
00:12:49,893 --> 00:12:51,276
Okay?

336
00:12:51,277 --> 00:12:52,660
It can have its code in itself, so

337
00:12:52,662 --> 00:12:54,695
it can be more object oriented.

338
00:12:54,697 --> 00:12:56,313
Right?

339
00:12:56,314 --> 00:12:57,930
It can have its reaction to launching be just in itself,

340
00:12:57,933 --> 00:13:00,133
it doesn't have to be talking to some global thing

341
00:13:00,135 --> 00:13:02,235
like the AppDelegate.

342
00:13:02,236 --> 00:13:04,336
And in general, you wanna be careful about the AppDelegate,

343
00:13:04,339 --> 00:13:05,805
cuz it is a global resource.

344
00:13:05,807 --> 00:13:08,040
And as you know, from all your computer science training.

345
00:13:08,042 --> 00:13:09,742
Globals can be bad.

346
00:13:09,744 --> 00:13:11,293
Okay?

347
00:13:11,294 --> 00:13:12,843
Globals are generally not the way you wanna communicate

348
00:13:12,846 --> 00:13:14,879
information, but some things are global.

349
00:13:14,881 --> 00:13:16,314
Okay?

350
00:13:16,315 --> 00:13:17,748
Like when we talk about core motion and the phone,

351
00:13:17,751 --> 00:13:20,418
there's only one gyro, there's only one accelerometer.

352
00:13:20,420 --> 00:13:21,885
That is global, okay?

353
00:13:21,887 --> 00:13:25,989
To your entire device, certainly to your entire app.

354
00:13:25,991 --> 00:13:27,057
Okay.

355
00:13:27,058 --> 00:13:28,124
So some things are global, but

356
00:13:28,126 --> 00:13:30,726
don't use global variables basically through your

357
00:13:30,728 --> 00:13:32,461
AppDelegate to circumvent that.

358
00:13:32,463 --> 00:13:33,462
All right.

359
00:13:33,463 --> 00:13:34,462
So what's in this past dictionary,

360
00:13:34,465 --> 00:13:35,630
this dictionary that you get?

361
00:13:35,632 --> 00:13:37,865
It's basically gonna tell you why you were launched.

362
00:13:37,867 --> 00:13:38,966
Okay?

363
00:13:38,968 --> 00:13:41,835
Cuz you can get launched for a lot of reasons.

364
00:13:41,837 --> 00:13:43,904
The user might have just clicked on you, okay?

365
00:13:43,906 --> 00:13:45,505
And launch you, but

366
00:13:45,507 --> 00:13:49,975
it might be a situation where someone air dropped a file of

367
00:13:49,977 --> 00:13:53,145
a certain type that you know how to open.

368
00:13:53,147 --> 00:13:56,381
And the system will launch you to open that file,

369
00:13:56,383 --> 00:13:57,782
which is kinda cool.

370
00:13:57,784 --> 00:13:59,951
We're gonna hopefully do air drop in our demo today.

371
00:13:59,953 --> 00:14:03,154
You might have setup some boundaries, and

372
00:14:03,156 --> 00:14:06,523
your phone moved into that part of the world.

373
00:14:06,525 --> 00:14:10,027
So, it's possible to actually setup s big region and say,

374
00:14:10,029 --> 00:14:13,029
when this device comes in this region, run my app.

375
00:14:13,031 --> 00:14:14,297
Okay?

376
00:14:14,299 --> 00:14:17,466
And if your app is not running, it will get launched.

377
00:14:17,468 --> 00:14:19,668
Okay?

378
00:14:19,669 --> 00:14:21,869
To go deal with the fact that you just moved near the dry

379
00:14:21,872 --> 00:14:23,989
cleaners or

380
00:14:23,990 --> 00:14:26,107
whatever you put in there as one of your regions.

381
00:14:26,110 --> 00:14:29,277
In iOS8, you can start an activity like editing a file

382
00:14:29,279 --> 00:14:32,580
on one device, like your Mac and then walk out the door and

383
00:14:32,582 --> 00:14:34,949
pull out your phone and keep editing it.

384
00:14:34,951 --> 00:14:36,484
Okay? So,

385
00:14:36,485 --> 00:14:38,018
it's kind of like you can continue activities, so

386
00:14:38,020 --> 00:14:40,320
you might get launched to continue an activity.

387
00:14:40,322 --> 00:14:42,522
Okay? You could get launched,

388
00:14:42,524 --> 00:14:45,224
because a push notification arrives.

389
00:14:45,226 --> 00:14:46,859
Do you know what a push notification is?

390
00:14:46,861 --> 00:14:50,662
Basically, this service where third parties can send you

391
00:14:50,664 --> 00:14:51,863
notifications.

392
00:14:51,865 --> 00:14:54,832
So for example, if you're playing a game,

393
00:14:54,834 --> 00:14:57,902
maybe its a turn based game and its your turn.

394
00:14:57,904 --> 00:15:00,070
You can go to push notification and

395
00:15:00,072 --> 00:15:02,806
it might launch the game to take your turn.

396
00:15:02,808 --> 00:15:04,040
Okay?

397
00:15:04,042 --> 00:15:05,742
So a lot of reasoning could be launched and

398
00:15:05,744 --> 00:15:08,210
that dictionary is going to contain information about why.

399
00:15:08,212 --> 00:15:09,578
All right?

400
00:15:09,580 --> 00:15:13,181
Now, it used to be that an application didn't finish

401
00:15:13,183 --> 00:15:16,651
launching with options, you would build your UI.

402
00:15:16,653 --> 00:15:18,119
So you'd instantiate a split view,

403
00:15:18,121 --> 00:15:19,987
you'd instantiate a navigation controller.

404
00:15:19,989 --> 00:15:21,121
You'd put in there with a master.

405
00:15:21,123 --> 00:15:22,556
You'd put to create your view controller.

406
00:15:22,558 --> 00:15:23,624
Okay.

407
00:15:23,625 --> 00:15:24,691
We don't do any of that anymore and

408
00:15:24,693 --> 00:15:27,493
when you're searching on the internet for how to do things,

409
00:15:27,495 --> 00:15:30,029
you're probably gonna find some old stuff that says,

410
00:15:30,031 --> 00:15:32,831
put this in application did finish launching with options.

411
00:15:32,833 --> 00:15:34,833
I'm generally a fan of not putting that kind

412
00:15:34,835 --> 00:15:37,569
of code in application did finish launching with options.

413
00:15:37,571 --> 00:15:39,003
It's really not what it's for.

414
00:15:39,005 --> 00:15:40,772
It's more for

415
00:15:40,773 --> 00:15:42,540
handling all these other kind of global events,

416
00:15:42,542 --> 00:15:45,409
like somebody wants you to open a file or whatever.

417
00:15:45,411 --> 00:15:46,521
Okay?

418
00:15:46,522 --> 00:15:47,632
It's not where you build your UI.

419
00:15:47,633 --> 00:15:48,743
You build your UI in your storyboard as much

420
00:15:48,747 --> 00:15:49,379
as possible.

421
00:15:49,381 --> 00:15:50,913
All right?

422
00:15:50,915 --> 00:15:52,948
Okay.

423
00:15:52,950 --> 00:15:58,220
So now you are moving, so you've been active.

424
00:15:58,222 --> 00:15:59,754
Okay? We haven't talked about this

425
00:15:59,756 --> 00:16:00,588
getting too active.

426
00:16:00,590 --> 00:16:02,423
But let's say you are active now.

427
00:16:02,425 --> 00:16:04,825
And someone clicks on another app.

428
00:16:04,827 --> 00:16:06,560
And you go to this inactive state.

429
00:16:06,562 --> 00:16:08,895
You go from active to inactive.

430
00:16:08,897 --> 00:16:10,029
You're going to get application will

431
00:16:10,031 --> 00:16:11,731
resign active.

432
00:16:11,732 --> 00:16:13,432
Now, what do you want to do in this method,

433
00:16:13,434 --> 00:16:15,501
or when you get this notification?

434
00:16:15,503 --> 00:16:18,070
This is mostly where you want to pause your UI.

435
00:16:18,072 --> 00:16:20,939
Because you've just gone inactive.

436
00:16:20,941 --> 00:16:22,474
Okay?

437
00:16:22,475 --> 00:16:24,008
It might be that someone's going to come right back to

438
00:16:24,010 --> 00:16:25,409
you and you want to continue.

439
00:16:25,411 --> 00:16:26,994
Okay?

440
00:16:26,995 --> 00:16:28,578
So in resign active, you want to pause.

441
00:16:28,581 --> 00:16:31,548
This is I think of as the pause method.

442
00:16:31,550 --> 00:16:32,349
Okay?

443
00:16:32,351 --> 00:16:34,685
You're going from active,

444
00:16:34,686 --> 00:16:37,020
where the user is using your to this inactive state, pause.

445
00:16:37,022 --> 00:16:38,421
Okay? Now you might be on your way

446
00:16:38,423 --> 00:16:40,089
to going to into the background, but

447
00:16:40,091 --> 00:16:41,540
you might not be.

448
00:16:41,541 --> 00:16:42,990
It might just be that a phone call came in.

449
00:16:42,993 --> 00:16:45,160
When a phone call comes in, kind of the current

450
00:16:45,162 --> 00:16:46,861
application gets put in the inactive state,

451
00:16:46,863 --> 00:16:48,095
you answer the call, and

452
00:16:48,097 --> 00:16:50,230
when you're done it goes back to being active again.

453
00:16:51,200 --> 00:16:53,733
Okay, so you want to pause there.

454
00:16:53,735 --> 00:16:55,535
Now, what about going back to active?

455
00:16:55,537 --> 00:16:57,136
So you were paused and

456
00:16:57,138 --> 00:17:00,239
you transitioned to active, or you were launched and

457
00:17:00,241 --> 00:17:02,040
you transitioned all the way to active.

458
00:17:02,042 --> 00:17:04,342
This is where you want to, kind of, unpause.

459
00:17:04,344 --> 00:17:05,877
So this is where you

460
00:17:05,879 --> 00:17:08,412
would undo whatever you did in Resign.

461
00:17:08,414 --> 00:17:11,348
So Resign and BecomeActive obviously are paired.

462
00:17:11,350 --> 00:17:14,117
Resign, you can kinda think as pause my state.

463
00:17:14,119 --> 00:17:16,853
And BecomeActive, you can think of as resume my state.

464
00:17:16,855 --> 00:17:18,054
Now, of course, when you're launching for

465
00:17:18,056 --> 00:17:20,923
the first time, you go through the Inactive state.

466
00:17:20,925 --> 00:17:23,659
You never resigned Active, so you never paused.

467
00:17:23,661 --> 00:17:25,627
So there's never, no reason to resume.

468
00:17:25,629 --> 00:17:27,162
Okay? You still might do some

469
00:17:27,164 --> 00:17:29,597
of the things you do to resume in that case.

470
00:17:29,599 --> 00:17:32,266
But obviously that combination can happen.

471
00:17:33,269 --> 00:17:34,468
All right. So what about this state?

472
00:17:34,470 --> 00:17:37,537
So now you've gone to background.

473
00:17:37,539 --> 00:17:39,205
So if they clicked on some other app,

474
00:17:39,207 --> 00:17:40,139
you go into the background.

475
00:17:40,141 --> 00:17:42,341
Remember, you only go in here briefly.

476
00:17:42,343 --> 00:17:43,575
Okay? This is where you wanna

477
00:17:43,577 --> 00:17:46,344
batten down the hatches and prepare for your death.

478
00:17:46,346 --> 00:17:47,479
Okay?

479
00:17:47,480 --> 00:17:48,613
Because you could sit in background for

480
00:17:48,615 --> 00:17:52,216
just a few fractions of a second, go into suspended, and

481
00:17:52,218 --> 00:17:53,584
then you could be killed.

482
00:17:53,586 --> 00:17:54,818
Okay? Without ever getting chance

483
00:17:54,820 --> 00:17:56,987
to run again.

484
00:17:56,988 --> 00:17:59,155
So going into the background stage application did enter

485
00:17:59,157 --> 00:18:00,140
background.

486
00:18:00,141 --> 00:18:01,124
That's where you want to batten down the hatches,

487
00:18:01,126 --> 00:18:03,093
prepare for your own death.

488
00:18:03,094 --> 00:18:05,061
Save any unsaved information although you should probably

489
00:18:05,063 --> 00:18:05,627
be saving that.

490
00:18:05,629 --> 00:18:07,379
Most of you don't.

491
00:18:07,380 --> 00:18:09,130
Most of the things like here if you start off threads to go

492
00:18:09,133 --> 00:18:11,266
do things like you have a background thread that does

493
00:18:11,268 --> 00:18:13,935
some saving, make sure that thread is finished.

494
00:18:13,937 --> 00:18:16,937
And it is possible in DidEnterBackground to ask for

495
00:18:16,939 --> 00:18:18,238
more time.

496
00:18:18,240 --> 00:18:19,906
Okay? UI application has a method

497
00:18:19,908 --> 00:18:22,142
which I'm not gonna talk about, but you can basically

498
00:18:22,144 --> 00:18:25,812
start up a background task and get some more time to run in

499
00:18:25,814 --> 00:18:27,980
this background stage before you go to suspended.

500
00:18:27,982 --> 00:18:30,182
If you abuse that.

501
00:18:30,184 --> 00:18:32,518
OKay?

502
00:18:32,519 --> 00:18:34,853
Like you try to stay active forever, or for many minutes,

503
00:18:34,855 --> 00:18:37,422
the system will stop granting you that.

504
00:18:37,424 --> 00:18:38,823
Okay? So don't do that.

505
00:18:38,825 --> 00:18:40,858
System expects you, if you as for more time,

506
00:18:40,860 --> 00:18:42,793
to quickly get that done with.

507
00:18:42,795 --> 00:18:44,828
Or to time out whatever you're doing, do something.

508
00:18:44,830 --> 00:18:46,830
Because when you go to the background it really wants you

509
00:18:46,832 --> 00:18:48,364
to shut up, okay?

510
00:18:48,366 --> 00:18:50,933
Be quite, because some other app is running right now.

511
00:18:52,136 --> 00:18:55,137
Okay, so that did DidEnterBackground.

512
00:18:55,139 --> 00:18:58,006
When you get activated again from the background

513
00:18:58,008 --> 00:19:00,808
because someone clicked back on you, this is where you can

514
00:19:00,810 --> 00:19:02,176
un-batten down the hatches, right?

515
00:19:02,178 --> 00:19:03,410
This is where you can open things back.

516
00:19:03,412 --> 00:19:04,762
Back up a bit.

517
00:19:04,763 --> 00:19:06,113
You're back in the foreground, okay?

518
00:19:06,115 --> 00:19:07,847
Maybe if you had something saved or

519
00:19:07,849 --> 00:19:09,982
you threw away something from the heap,

520
00:19:09,984 --> 00:19:11,550
you can load it back up, et cetera.

521
00:19:11,552 --> 00:19:14,453
So, this is kind of getting yourself back to life

522
00:19:14,455 --> 00:19:16,922
after battening down the hatches, okay?

523
00:19:16,924 --> 00:19:17,689
So, that's it.

524
00:19:17,691 --> 00:19:18,322
That's the cycle.

525
00:19:18,324 --> 00:19:19,357
That's how it goes.

526
00:19:19,359 --> 00:19:23,360
The AppDelegate does a lot more things than just that

527
00:19:23,362 --> 00:19:24,094
cycle.

528
00:19:25,063 --> 00:19:26,696
It handles notifications.

529
00:19:27,632 --> 00:19:30,933
It can do this whole thing, a state restoration.

530
00:19:30,935 --> 00:19:33,869
So there's a way, kind of a mechanism I will say,

531
00:19:33,871 --> 00:19:36,237
which I don't have time to talk to you about,

532
00:19:36,239 --> 00:19:38,973
where you can essentially, save the state of your UI, so

533
00:19:38,975 --> 00:19:41,108
that if you do get killed while you're suspended,

534
00:19:41,110 --> 00:19:42,643
and you start up again,

535
00:19:42,645 --> 00:19:45,245
you'll start up in exactly the same place you were

536
00:19:45,247 --> 00:19:47,614
instead of starting up like a fresh app launch.

537
00:19:48,717 --> 00:19:50,916
So the AppDelegate is how you do all of that.

538
00:19:50,918 --> 00:19:51,984
Look that up.

539
00:19:51,986 --> 00:19:52,951
Data protection.

540
00:19:52,953 --> 00:19:55,604
There's a mechanism for

541
00:19:55,605 --> 00:19:58,256
saying, hey, the data that my app accesses should be

542
00:19:58,258 --> 00:20:02,926
encrypted whenever the phone is locked.

543
00:20:02,928 --> 00:20:05,062
That's great because if someone steals your phone or

544
00:20:05,064 --> 00:20:07,464
tries to break into it, all of the data's encrypted.

545
00:20:07,466 --> 00:20:08,698
They can't see your data anyway,

546
00:20:08,700 --> 00:20:10,399
even if they hack into it.

547
00:20:10,401 --> 00:20:14,503
But you need to find out in your AppDelegate when that

548
00:20:14,505 --> 00:20:17,773
gets turned off and back on, so you can find that out.

549
00:20:17,775 --> 00:20:20,608
Obviously, opening and closing files, right?

550
00:20:20,610 --> 00:20:23,594
Not opening and closing,

551
00:20:23,595 --> 00:20:26,579
opening files yourself, files that you know how to open.

552
00:20:26,582 --> 00:20:28,682
The Delegate gets sent a message saying,

553
00:20:28,684 --> 00:20:29,950
please open this URL.

554
00:20:29,952 --> 00:20:31,618
You have to register with the system for

555
00:20:31,620 --> 00:20:33,453
what kind of files you know how to do, and

556
00:20:33,455 --> 00:20:35,721
we'll do that in the demo here.

557
00:20:35,723 --> 00:20:38,791
But then this application delegate method is going

558
00:20:38,793 --> 00:20:40,025
to ask you to open it.

559
00:20:40,027 --> 00:20:42,560
And then I mentioned background fetching where you

560
00:20:42,562 --> 00:20:45,430
can, essentially, tell the system you want to wake up

561
00:20:45,432 --> 00:20:48,632
every once in a while and do some work in the background.

562
00:20:48,634 --> 00:20:49,767
And that's pretty cool.

563
00:20:49,769 --> 00:20:51,602
Again, you don't want to abuse it, or

564
00:20:51,603 --> 00:20:53,436
the system will start saying, wow, that guy's really a pig.

565
00:20:53,439 --> 00:20:55,205
Every time I wake him up to run in the background,

566
00:20:55,207 --> 00:20:57,507
he uses all kinds of battery, so

567
00:20:57,509 --> 00:20:59,575
I'm going to stop waking him up so much.

568
00:21:01,412 --> 00:21:01,943
But it can do that.

569
00:21:01,945 --> 00:21:02,643
So AppDelegate.

570
00:21:02,645 --> 00:21:03,928
A lot of stuff in there.

571
00:21:03,929 --> 00:21:05,212
You can just go look at the documentation for it and

572
00:21:05,214 --> 00:21:06,780
see all the things it can do.

573
00:21:06,782 --> 00:21:08,648
Now in addition, question?

574
00:21:08,650 --> 00:21:12,218
>> Yeah. I was just wondering,

575
00:21:12,220 --> 00:21:15,288
I had an app once which had music, and

576
00:21:15,290 --> 00:21:17,256
when I pressed the home button or even locked the phone,

577
00:21:17,258 --> 00:21:19,525
it would still keep playing.

578
00:21:19,527 --> 00:21:21,026
Shouldn't it be like turning that off?

579
00:21:21,028 --> 00:21:23,628
>> Yes, the question is, what if I have a music app and

580
00:21:23,630 --> 00:21:25,096
I'm playing music and

581
00:21:25,098 --> 00:21:28,165
I switch to another app, how does it keep playing?

582
00:21:28,167 --> 00:21:30,534
Well, that's one of the cases where you are allowed to be

583
00:21:30,536 --> 00:21:31,601
running in the background.

584
00:21:31,603 --> 00:21:33,470
So that app is running in the background.

585
00:21:33,472 --> 00:21:37,073
And you have to sign up and kind of requisition your app.

586
00:21:37,075 --> 00:21:39,608
You have to set a capability to do that.

587
00:21:39,610 --> 00:21:41,410
But you can do it.

588
00:21:41,412 --> 00:21:43,679
And, you know, if your app is a bad citizen and

589
00:21:43,681 --> 00:21:45,046
says it's a music playing app but

590
00:21:45,048 --> 00:21:46,748
it's doing other things in the background.

591
00:21:46,750 --> 00:21:48,849
Again, if it starts using a lot of battery,

592
00:21:48,851 --> 00:21:50,017
it's gonna get killed.

593
00:21:50,019 --> 00:21:52,152
Or it's not gonna be given an opportunity.

594
00:21:52,154 --> 00:21:54,754
You might make it to the app store at the beginning.

595
00:21:54,756 --> 00:21:57,056
But eventually they'll pull you if you are abusing

596
00:21:57,058 --> 00:21:58,457
the backgrounding mechanisms.

597
00:21:58,459 --> 00:22:00,726
Because there are other ways you can, you know.

598
00:22:00,728 --> 00:22:03,195
Voip apps need to be able to stay in the background,

599
00:22:03,197 --> 00:22:04,830
you're on a phone call.

600
00:22:04,831 --> 00:22:06,464
There are reasons to stay live in the background.

601
00:22:06,466 --> 00:22:09,467
Some people think, IOS not really multi-tasking.

602
00:22:09,469 --> 00:22:11,235
It absolutely is multi-tasking, but

603
00:22:11,237 --> 00:22:13,971
it has a philosophy which is the app

604
00:22:13,973 --> 00:22:16,540
that the user is currently interacting with should get

605
00:22:16,542 --> 00:22:18,742
almost all of the attention of the device.

606
00:22:18,744 --> 00:22:20,043
That's just its philosophy,

607
00:22:20,045 --> 00:22:21,811
which I think is a good philosophy.

608
00:22:21,813 --> 00:22:23,045
So anything that runs in the background,

609
00:22:23,047 --> 00:22:24,279
has to really keep it quiet.

610
00:22:25,282 --> 00:22:29,383
But music is one where it can play in the background.

611
00:22:29,385 --> 00:22:31,151
So in addition to the Application Delegate,

612
00:22:31,153 --> 00:22:32,953
there's the UI application object itself,

613
00:22:32,955 --> 00:22:35,722
which is the shared thing you call this class function

614
00:22:35,724 --> 00:22:37,357
shared application to get it.

615
00:22:37,359 --> 00:22:40,659
And it manages all the global behavior in your app.

616
00:22:40,661 --> 00:22:42,961
You don't subclass it.

617
00:22:42,963 --> 00:22:45,630
But you can send it a lot of messages to do various

618
00:22:45,632 --> 00:22:48,733
things like open a URL in another app.

619
00:22:48,735 --> 00:22:51,235
So we talked about how the delegate is used

620
00:22:51,237 --> 00:22:53,337
to open a URL in your own app.

621
00:22:53,339 --> 00:22:56,607
You can call this method open URL in application,

622
00:22:56,609 --> 00:22:58,709
and you did that in your last assignment.

623
00:23:00,045 --> 00:23:02,145
So you can open URL, and

624
00:23:02,146 --> 00:23:04,246
it will figure out what apps on your device handle that.

625
00:23:04,249 --> 00:23:06,482
And it will open that URL up.

626
00:23:06,484 --> 00:23:09,885
You can also register for

627
00:23:09,887 --> 00:23:14,556
push notifications or you can schedule local notifications.

628
00:23:14,558 --> 00:23:16,124
So local notifications are just

629
00:23:16,126 --> 00:23:17,992
notifications kind of like push notifications, but

630
00:23:17,994 --> 00:23:20,461
they're totally local and they're timed.

631
00:23:20,463 --> 00:23:23,030
So you say, send this notification to the user at

632
00:23:23,032 --> 00:23:25,331
this time and it sends it to them.

633
00:23:25,333 --> 00:23:27,900
And then push notifications, as we've talked about before,

634
00:23:27,902 --> 00:23:29,602
are these things that come over the network when it's

635
00:23:29,604 --> 00:23:31,704
your turn to play your game, or whatever.

636
00:23:31,706 --> 00:23:34,373
So you can register to receive those in scheduled

637
00:23:34,375 --> 00:23:37,342
notifications locally using UIApplication.

638
00:23:37,344 --> 00:23:40,712
If you're doing this background fetching thing,

639
00:23:40,714 --> 00:23:43,414
there's a very important function called

640
00:23:43,416 --> 00:23:45,783
setMinimumBackgroundFetchInte- rval.

641
00:23:45,785 --> 00:23:48,518
That by default is never.

642
00:23:48,520 --> 00:23:51,321
So you might go to all this trouble to say yeah, I want to

643
00:23:51,323 --> 00:23:54,290
do background fetching and all this stuff, and then if you

644
00:23:54,292 --> 00:23:57,126
don't call this method to set your fetching interval to

645
00:23:57,128 --> 00:23:59,995
something besides never, you'll never get woken up.

646
00:23:59,997 --> 00:24:03,865
Usually you set it to minimum, this interval minimum,

647
00:24:03,867 --> 00:24:06,901
which is like, wake me up as much as you can.

648
00:24:06,903 --> 00:24:09,904
The system is kinda cool for this background fetching.

649
00:24:09,906 --> 00:24:12,139
It kinda watches when the user uses your app, and

650
00:24:12,141 --> 00:24:13,640
the more the user uses your app,

651
00:24:13,642 --> 00:24:16,343
the more it's gonna let the background fetching happen,

652
00:24:16,345 --> 00:24:18,378
because it's gonna figure the more it use.

653
00:24:18,380 --> 00:24:20,346
It'll even kinda look at times of day.

654
00:24:20,348 --> 00:24:23,015
This person runs this app every morning at 9:00,

655
00:24:23,017 --> 00:24:24,783
between 9:00 and 9:15, so

656
00:24:24,785 --> 00:24:27,686
we're gonna let this background fetch run at 8:30.

657
00:24:27,688 --> 00:24:30,138
'Kay.

658
00:24:30,139 --> 00:24:32,589
So it's pretty smart system for that.

659
00:24:32,592 --> 00:24:34,425
I told you could ask for more time when you get

660
00:24:34,427 --> 00:24:36,260
backgrounded, you do that with this method

661
00:24:36,262 --> 00:24:38,162
backgroundTaskWithExpirationH- andler.

662
00:24:39,231 --> 00:24:41,431
And so you get this background task.

663
00:24:41,433 --> 00:24:44,334
You get to stay alive then until you call end

664
00:24:44,336 --> 00:24:45,668
background task.

665
00:24:45,670 --> 00:24:49,304
If you don't call end background task pretty quickly

666
00:24:49,306 --> 00:24:52,674
after you call backgroundTaskWithExpirationH-

667
00:24:52,676 --> 00:24:56,611
andler, it's going to say I give up on you, and kill you.

668
00:24:56,613 --> 00:24:58,346
And also the next time you ask for

669
00:24:58,348 --> 00:25:01,181
a background task with expiration it's gonna say,

670
00:25:01,183 --> 00:25:04,084
no I don't give that guy ones, he doesn't end his.

671
00:25:04,086 --> 00:25:08,354
So you gotta really be sure you call end background task

672
00:25:08,356 --> 00:25:10,890
when you do this other thing.

673
00:25:10,892 --> 00:25:16,194
There's a little spinner if you look at device well,

674
00:25:16,196 --> 00:25:21,532
maybe we can see it in, I don't know, Safari maybe?

675
00:25:21,534 --> 00:25:23,034
You see the little spinner up there?

676
00:25:23,036 --> 00:25:25,836
Right by the AT&T whatever,

677
00:25:25,838 --> 00:25:30,907
wireless thing there was a little spinner that spun.

678
00:25:30,909 --> 00:25:32,709
That, you can control as well.

679
00:25:32,711 --> 00:25:33,676
You can turn that on and

680
00:25:33,678 --> 00:25:35,377
off if your app accesses the network.

681
00:25:35,379 --> 00:25:37,979
Unfortunately, it's a boolean, so if you have multiple

682
00:25:37,981 --> 00:25:40,615
places in your app that were accessing the network you have

683
00:25:40,617 --> 00:25:43,017
to figure out how to turn it on and off appropriately.

684
00:25:43,019 --> 00:25:44,085
Yeah?

685
00:25:44,086 --> 00:25:45,152
>> I don't think your phone is plugged in.

686
00:25:45,154 --> 00:25:46,086
>> Oh, sorry.

687
00:25:46,088 --> 00:25:47,854
Yeah. Let's see here.

688
00:25:47,856 --> 00:25:50,457
It's plugged in, it just disconnects every time it goes

689
00:25:50,459 --> 00:25:53,025
into sleep mode here.

690
00:25:54,729 --> 00:25:57,429
So, I don't know, let's search for something.

691
00:25:57,431 --> 00:26:00,565
Okay, watch the status bar at the top there.

692
00:26:00,567 --> 00:26:03,401
You see how there's that little spinner spinning?

693
00:26:03,403 --> 00:26:04,168
Okay?

694
00:26:04,170 --> 00:26:05,269
You can turn that on and off.

695
00:26:06,605 --> 00:26:08,622
'Kay?

696
00:26:08,623 --> 00:26:10,640
And yeah keep reminding me if I refer to this and

697
00:26:10,642 --> 00:26:13,343
it's not up there.

698
00:26:13,345 --> 00:26:15,644
You can also find out about things like,

699
00:26:15,646 --> 00:26:18,714
that preferred content size category notification,

700
00:26:18,716 --> 00:26:21,683
well you can also just ask UI application what that is

701
00:26:21,685 --> 00:26:22,751
any time you want.

702
00:26:22,753 --> 00:26:24,385
And you can find out what state you're in,

703
00:26:24,387 --> 00:26:26,253
are you in the foreground, or in the background,

704
00:26:26,255 --> 00:26:27,321
are you active, inactive?

705
00:26:27,323 --> 00:26:29,723
You can find all that out as well.

706
00:26:29,725 --> 00:26:34,594
So U application has a lot of cool stuff in it as well.

707
00:26:34,596 --> 00:26:39,932
So there's another interesting thing called Info.plist.

708
00:26:39,934 --> 00:26:41,900
Dot plist because it's a property list.

709
00:26:41,902 --> 00:26:44,436
You remember a property list is any combination of

710
00:26:44,438 --> 00:26:47,905
dictionaries and arrays and strings and dates, in datas.

711
00:26:47,907 --> 00:26:51,942
And Info.plist contains a lot of settings in your app.

712
00:26:51,944 --> 00:26:54,144
And you can actually click on it directly.

713
00:26:54,146 --> 00:26:57,714
It's in that supporting files area and you'll see it.

714
00:26:57,716 --> 00:27:00,917
What you're seeing up here is the x code's property list

715
00:27:00,919 --> 00:27:03,953
editor, which lets you edit an arbitrary property list as

716
00:27:03,955 --> 00:27:05,087
you can see there.

717
00:27:05,089 --> 00:27:06,822
And it'll show you all the kinda setting,

718
00:27:06,824 --> 00:27:08,189
some of the settings of your app.

719
00:27:08,191 --> 00:27:10,191
You can even look at this in XML format.

720
00:27:10,193 --> 00:27:11,726
If you right click on it and

721
00:27:11,728 --> 00:27:14,495
switch to source code mode you can see it in XML.

722
00:27:14,497 --> 00:27:20,934
So this is that exact same property list in XML, raw XML.

723
00:27:20,936 --> 00:27:23,202
But you usually edit the Info.plist things in

724
00:27:23,204 --> 00:27:25,738
the project settings, which you get by clicking on

725
00:27:25,740 --> 00:27:28,107
the project in the upper left of the navigator.

726
00:27:28,109 --> 00:27:29,808
You see I've clicked on it there.

727
00:27:29,810 --> 00:27:32,010
And then you can see there's General Settings.

728
00:27:32,012 --> 00:27:35,213
So, for example, things like what device orientations you

729
00:27:35,215 --> 00:27:38,716
support, portrait or portrait upside-down, or landscape left

730
00:27:38,718 --> 00:27:41,518
and right, which you can see there's a UI for there,

731
00:27:41,520 --> 00:27:44,054
that's gonna set things in your Info.plist.

732
00:27:44,056 --> 00:27:45,105
'Kay?

733
00:27:45,106 --> 00:27:46,155
Now I'm gonna do a demo today and

734
00:27:46,158 --> 00:27:49,092
in the demo I'm gonna add some stuff to make my application

735
00:27:49,094 --> 00:27:51,193
know about a certain document type.

736
00:27:51,195 --> 00:27:53,929
I'm actually gonna do it by editing the Info.plist

737
00:27:53,931 --> 00:27:56,832
directly, because it's a lot faster and, you know,

738
00:27:56,834 --> 00:27:58,967
we're gonna be time constrained here.

739
00:27:58,969 --> 00:28:01,686
But you usually wouldn't do that.

740
00:28:01,687 --> 00:28:04,404
Usually you would be clicking settings here in your project

741
00:28:04,407 --> 00:28:05,957
settings UI.

742
00:28:05,958 --> 00:28:07,508
So the Info.plist you can kinda look through and

743
00:28:07,510 --> 00:28:08,442
see what's in there.

744
00:28:08,444 --> 00:28:10,710
A lot of that stuff's kind of arcane,

745
00:28:10,712 --> 00:28:13,913
you don't really even, hardly even know what it is.

746
00:28:13,915 --> 00:28:14,914
It's just for the application.

747
00:28:14,916 --> 00:28:17,416
But there are some things in there that

748
00:28:17,418 --> 00:28:19,084
are pretty important, pretty obvious,

749
00:28:19,086 --> 00:28:24,122
like what document types do I recognize, things like that.

750
00:28:24,124 --> 00:28:26,491
Okay, capabilities.

751
00:28:26,492 --> 00:28:28,859
So, some features in your app, quite a few actually,

752
00:28:28,861 --> 00:28:30,260
require enabling.

753
00:28:30,262 --> 00:28:31,845
In other words,

754
00:28:31,846 --> 00:28:33,429
you can't use them in your app until you enable them.

755
00:28:33,432 --> 00:28:37,100
Now, most of these are server features like iCloud or

756
00:28:37,102 --> 00:28:40,269
Game Center, or they're interoperability features,

757
00:28:40,271 --> 00:28:42,037
where you're gonna be inter-operating with other

758
00:28:42,039 --> 00:28:44,740
parts of the system like the Passbook or things like that.

759
00:28:44,742 --> 00:28:46,425
Okay?

760
00:28:46,426 --> 00:28:48,109
So you turn these on in Project Settings under

761
00:28:48,111 --> 00:28:48,910
Capabilities.

762
00:28:48,912 --> 00:28:50,478
You get this list right here.

763
00:28:50,480 --> 00:28:54,815
This is the current list as of the time I took the screen

764
00:28:54,817 --> 00:28:56,449
shot a few days ago.

765
00:28:56,451 --> 00:28:59,485
And you just switch those little switches,

766
00:28:59,487 --> 00:29:03,022
the on off switches, on or off to enable this.

767
00:29:03,024 --> 00:29:05,958
Kind of a little bit of a warning about here is that

768
00:29:05,960 --> 00:29:09,194
some of these things, the server based technologies

769
00:29:09,196 --> 00:29:11,496
require a normal developer program.

770
00:29:11,498 --> 00:29:14,699
The free University program that some of you are on,

771
00:29:14,701 --> 00:29:16,701
doesn't really support that.

772
00:29:16,703 --> 00:29:19,169
So if you wanted to do some of these things for

773
00:29:19,171 --> 00:29:20,370
your final project,

774
00:29:20,372 --> 00:29:23,373
you might have to join the actual developer program.

775
00:29:23,375 --> 00:29:25,575
'Kay, so this is an FYI there.

776
00:29:27,245 --> 00:29:29,278
If you click on the little triangle to the left of any of

777
00:29:29,280 --> 00:29:30,846
these things, it'll actually give you

778
00:29:30,848 --> 00:29:33,581
a little description of what the heck this thing is.

779
00:29:33,583 --> 00:29:35,583
'Kay?

780
00:29:35,584 --> 00:29:37,584
So you can click on maybe In-App purchases and

781
00:29:37,587 --> 00:29:41,855
it'll tell you, oh, this is what enables you to, the user

782
00:29:41,857 --> 00:29:45,559
to buy things to extend your app internally, etc.

783
00:29:45,561 --> 00:29:48,161
So I encourage you to look through all these things and

784
00:29:48,163 --> 00:29:49,362
see what's available.

785
00:29:49,364 --> 00:29:51,197
It kinda gives you a feeling for

786
00:29:51,199 --> 00:29:54,566
how much stuff there is in iOS and how little we can really

787
00:29:54,568 --> 00:29:58,070
cover in just basically nine weeks of this course.

788
00:29:58,072 --> 00:30:01,706
But, it's still kind of fun to look at what's in here.

789
00:30:01,708 --> 00:30:03,007
Okay?

790
00:30:03,009 --> 00:30:05,809
And these capabilities, sorry, question back there.

791
00:30:05,811 --> 00:30:08,779
>> So for the app [INAUDIBLE] map to run your app,

792
00:30:08,781 --> 00:30:11,181
would that be supported in this, or

793
00:30:11,183 --> 00:30:15,017
do you have to do a different thing to create another map?

794
00:30:15,019 --> 00:30:17,119
>> So you're talking about maps?

795
00:30:17,121 --> 00:30:20,989
So the question is, if I want to use a third party map

796
00:30:20,991 --> 00:30:25,293
API or something, do I need to enable this or something?

797
00:30:25,295 --> 00:30:26,761
No. This is just enabling what

798
00:30:26,763 --> 00:30:29,129
your app can do, what it's capabilities are.

799
00:30:29,131 --> 00:30:32,466
So for example if you're a map providing app, you would go

800
00:30:32,468 --> 00:30:35,769
here and enable your, you know, turn it on and all that.

801
00:30:35,771 --> 00:30:38,271
You see what I'm saying?

802
00:30:38,272 --> 00:30:40,772
The end-user, they benefit from whatever capabilities

803
00:30:40,775 --> 00:30:43,275
these apps have signed up for when they were built.

804
00:30:43,277 --> 00:30:45,044
Right? So this is a build setting

805
00:30:45,046 --> 00:30:47,213
essentially.

806
00:30:47,214 --> 00:30:49,381
And it has a little bit to do with the coordination of your

807
00:30:49,383 --> 00:30:53,017
bundle identifier with what's going on at Apple servers and

808
00:30:53,019 --> 00:30:54,385
all that stuff.

809
00:30:54,387 --> 00:30:57,221
So it's more than just turning it on, there's sometimes,

810
00:30:57,223 --> 00:31:00,623
there's some payload that has to be kind of arranged.

811
00:31:02,193 --> 00:31:04,677
All right?

812
00:31:04,678 --> 00:31:07,162
So the demo I'm gonna do here is kinda setting us up for

813
00:31:07,164 --> 00:31:09,214
Wednesday.

814
00:31:09,215 --> 00:31:11,265
I'm gonna show you how to do AirDrop to drop something into

815
00:31:11,268 --> 00:31:13,401
your app, 'kay, from the Mac.

816
00:31:13,403 --> 00:31:15,186
Which is really kinda cool,

817
00:31:15,187 --> 00:31:16,970
because you got this iPhone and let's say you wanna import

818
00:31:16,973 --> 00:31:19,073
something, you know, an image or,

819
00:31:19,075 --> 00:31:23,143
you know, any kind of file, a pdf file even, whatever.

820
00:31:23,145 --> 00:31:25,379
You'd like to be able to just basically drag it, drag and

821
00:31:25,381 --> 00:31:27,514
drop it from your desktop.

822
00:31:27,516 --> 00:31:30,750
So the example I'm gonna do here is on Wednesday,

823
00:31:30,752 --> 00:31:34,053
I'm gonna build an app that if you go on vacation, and,

824
00:31:34,055 --> 00:31:36,455
let's say, you take a bunch of photos that are,

825
00:31:36,457 --> 00:31:40,525
have GPS tags on them, and maybe you even go hiking,

826
00:31:40,527 --> 00:31:43,061
and you have a little GPS monitor,

827
00:31:43,063 --> 00:31:45,730
or let the iPhone keep track of where you go, and

828
00:31:45,732 --> 00:31:49,499
you wanna draw the track of where you hiked, or whatever.

829
00:31:49,501 --> 00:31:50,801
Okay?

830
00:31:50,802 --> 00:31:52,102
So we're gonna build an app on Wednesday that does both of

831
00:31:52,104 --> 00:31:54,321
those things.

832
00:31:54,322 --> 00:31:56,539
Let's you take some information about photos and

833
00:31:56,541 --> 00:32:00,209
their location or a track and draw them on a map.

834
00:32:00,211 --> 00:32:01,143
Okay?

835
00:32:01,145 --> 00:32:02,444
Now to do that app,

836
00:32:02,446 --> 00:32:05,546
we need to import that vacation information.

837
00:32:05,548 --> 00:32:06,814
Okay? I went on vacation,

838
00:32:06,816 --> 00:32:08,299
I need the info.

839
00:32:08,300 --> 00:32:09,783
And we're gonna do that with AirDrop and

840
00:32:09,785 --> 00:32:12,352
we're gonna to do it, air dropping GPX files.

841
00:32:12,354 --> 00:32:16,289
A GPX file is a file that just has a list of GPS coordinate

842
00:32:16,291 --> 00:32:20,192
related information, like waypoints that you were at

843
00:32:20,194 --> 00:32:22,394
where you maybe took a photo and

844
00:32:22,396 --> 00:32:25,330
the track if you took a hike or whatever.

845
00:32:25,332 --> 00:32:27,599
So that's called a GPX file,

846
00:32:27,601 --> 00:32:30,702
it's just kind of a public file format.

847
00:32:30,704 --> 00:32:35,472
It's XML, but it's XML with a certain extension, GPX.

848
00:32:35,474 --> 00:32:38,875
And I'm gonna show you how you can make it, so you can just

849
00:32:38,877 --> 00:32:41,878
drag a GPX file into your iPhone app from your Mac.

850
00:32:41,880 --> 00:32:43,913
Okay?

851
00:32:43,914 --> 00:32:45,947
So let's first talk about how that's gonna work here.

852
00:32:45,950 --> 00:32:49,785
So on the Mac, you just go here to AirDrop.

853
00:32:49,787 --> 00:32:53,422
You've probably, how many people have used AirDrop for

854
00:32:53,424 --> 00:32:54,189
anything?

855
00:32:54,191 --> 00:32:54,989
About only by half, okay.

856
00:32:54,991 --> 00:32:55,957
Interesting.

857
00:32:55,958 --> 00:32:56,924
So AirDrop's really cool.

858
00:32:56,926 --> 00:32:59,526
So we got a lot of people here with various devices.

859
00:32:59,528 --> 00:33:02,896
And here, I'm gonna turn this guy on and you're

860
00:33:02,898 --> 00:33:07,233
gonna see that he shows up right here, CS192p iPhone6+.

861
00:33:07,235 --> 00:33:09,652
Can you see that?

862
00:33:09,653 --> 00:33:12,070
And so if I have a file, like my Vacation.gpx right here,

863
00:33:12,073 --> 00:33:13,772
you see this is a GPX file.

864
00:33:13,774 --> 00:33:17,776
I can actually just drag and drop it onto here.

865
00:33:17,778 --> 00:33:20,445
Okay. To transfer it to my Mac or

866
00:33:20,447 --> 00:33:21,746
to my iPhone.

867
00:33:21,748 --> 00:33:25,649
But when I do that, sorry.

868
00:33:25,651 --> 00:33:27,450
Cancel.

869
00:33:27,452 --> 00:33:30,420
Its too bad this drops all the time,

870
00:33:30,422 --> 00:33:32,688
its a little bit annoying.

871
00:33:32,690 --> 00:33:36,058
So, I'm gonna drag it again.

872
00:33:36,060 --> 00:33:37,459
Okay.

873
00:33:37,461 --> 00:33:38,526
Drag it on here.

874
00:33:38,528 --> 00:33:41,128
So what happens right now is it says, oh,

875
00:33:41,130 --> 00:33:44,832
AirDrop someone wants to drag this GPX file to your Mac, but

876
00:33:44,834 --> 00:33:47,134
you have no app that can handle this.

877
00:33:47,136 --> 00:33:48,335
So it's saying,

878
00:33:48,337 --> 00:33:51,437
do you want to go to the App Store to get an app?

879
00:33:51,439 --> 00:33:53,339
Which I don't want to go to the App Store,

880
00:33:53,341 --> 00:33:55,607
I want to write my own app that handles GPX files.

881
00:33:55,609 --> 00:33:56,942
So that's what we're gonna do.

882
00:33:56,944 --> 00:34:01,813
We're gonna write our own app here to handle GPX files.

883
00:34:01,815 --> 00:34:05,116
All right. So let's go to Xcode.

884
00:34:05,118 --> 00:34:08,018
So we're gonna create a new project here.

885
00:34:08,020 --> 00:34:09,953
Now this project is going to show you how to do

886
00:34:09,955 --> 00:34:11,655
the AirDrop.

887
00:34:11,656 --> 00:34:13,356
I'm also gonna show you how to do notifications.

888
00:34:13,358 --> 00:34:14,857
Okay? Cuz that's an important thing

889
00:34:14,859 --> 00:34:16,225
to understand how to do as well.

890
00:34:16,227 --> 00:34:20,429
So, I'm gonna call this app Tracks, because it keeps track

891
00:34:20,431 --> 00:34:22,797
of where you go on your vacations or

892
00:34:22,799 --> 00:34:24,532
whatever with GPX file.

893
00:34:24,534 --> 00:34:27,301
So we call we're gonna put it in the place we always put

894
00:34:27,303 --> 00:34:27,968
everything.

895
00:34:27,970 --> 00:34:28,969
Okay.

896
00:34:28,971 --> 00:34:31,304
Here it is, right here.

897
00:34:31,306 --> 00:34:34,207
I am not going to move the AppDelegate out of the way

898
00:34:34,209 --> 00:34:35,308
this time.

899
00:34:35,309 --> 00:34:36,408
Okay? So the first time, yehey.

900
00:34:36,411 --> 00:34:37,943
We get to actually do something with

901
00:34:37,945 --> 00:34:38,944
our AppDelegate, but

902
00:34:38,946 --> 00:34:40,845
I'm gonna move those things out of the way.

903
00:34:40,847 --> 00:34:43,981
But we're gonna sneak in there and look at info.plist, so

904
00:34:43,983 --> 00:34:45,750
kind of get both of those things.

905
00:34:45,752 --> 00:34:47,335
All right.

906
00:34:47,336 --> 00:34:48,919
So here's our ViewController.

907
00:34:48,921 --> 00:34:51,622
How do we want to do this?

908
00:34:51,623 --> 00:34:54,324
Well, the most important thing we need to do to make our app

909
00:34:54,326 --> 00:34:58,928
be air droppable for GPX is to register with our app that we

910
00:34:58,930 --> 00:35:00,863
know what a GPX file is.

911
00:35:00,865 --> 00:35:02,898
Okay?

912
00:35:02,899 --> 00:35:04,932
And we can do this in our project settings over here

913
00:35:04,935 --> 00:35:06,685
in Info.

914
00:35:06,686 --> 00:35:08,436
You see down here at the bottom of Projects and

915
00:35:08,439 --> 00:35:10,038
Info is Document Types.

916
00:35:10,040 --> 00:35:12,440
So these are all the types of documents I know about.

917
00:35:12,442 --> 00:35:14,642
And then also Imported UTIs.

918
00:35:14,644 --> 00:35:19,046
These are all the basically URL like descriptions of

919
00:35:19,048 --> 00:35:20,147
a file.

920
00:35:20,148 --> 00:35:21,247
So I kind of need to do both of those things.

921
00:35:21,249 --> 00:35:24,550
I need to describe what a GPX file is.

922
00:35:24,552 --> 00:35:27,119
And then I just say, yes, that's a type I support.

923
00:35:27,121 --> 00:35:30,122
Now, I can do all this by clicking the plus sign

924
00:35:30,124 --> 00:35:31,123
here and here.

925
00:35:31,125 --> 00:35:32,924
But I want to show you another demo.

926
00:35:32,926 --> 00:35:35,259
So, I'm gonna do this is kind of fast mode,

927
00:35:35,261 --> 00:35:38,329
which I'm just gonna go to the Info.plist, because this

928
00:35:38,331 --> 00:35:41,131
information's going to be put in the Info.plist.

929
00:35:41,133 --> 00:35:44,368
And I'm gonna edit it in source mode.

930
00:35:44,370 --> 00:35:45,735
So I'm just going here and saying,

931
00:35:45,737 --> 00:35:47,554
edit it as Source Code.

932
00:35:47,555 --> 00:35:49,372
Now you can see it's an XML file here.

933
00:35:49,374 --> 00:35:53,475
And I actually prepped all of the stuff necessary here,

934
00:35:53,477 --> 00:35:57,179
which you can look through later at your leisure.

935
00:35:57,181 --> 00:35:59,948
Wait, for GPX files, but you can see

936
00:35:59,950 --> 00:36:04,385
it's basically that I say that it's got file name extent,

937
00:36:04,387 --> 00:36:07,954
file extensions GPX, but that it is a XML file.

938
00:36:07,956 --> 00:36:09,823
All right.

939
00:36:09,824 --> 00:36:11,691
And then up here, I'm saying, the documents I support.

940
00:36:11,693 --> 00:36:16,295
I support this, which is my own private GPX type and

941
00:36:16,297 --> 00:36:20,199
then that's linked to the type down here.

942
00:36:20,201 --> 00:36:24,969
So, I'm just gonna copy this and go over here.

943
00:36:24,971 --> 00:36:26,504
And actually,

944
00:36:26,506 --> 00:36:31,575
just paste it right at the bottom of this down here.

945
00:36:31,577 --> 00:36:32,642
Paste.

946
00:36:32,644 --> 00:36:34,211
Okay.

947
00:36:34,212 --> 00:36:35,779
So, I basically put that stuff in there.

948
00:36:35,781 --> 00:36:38,648
I can even go back to Property List mode and

949
00:36:38,650 --> 00:36:41,851
you can see that it added it here at the bottom.

950
00:36:41,853 --> 00:36:42,484
Okay.

951
00:36:42,486 --> 00:36:45,487
So here's my types.

952
00:36:45,489 --> 00:36:47,222
And if I go back to my Project Settings,

953
00:36:47,224 --> 00:36:48,423
I can see them here as well.

954
00:36:48,425 --> 00:36:51,125
I can see now I have one document type,

955
00:36:51,127 --> 00:36:53,794
it's a GPX file and I can import GPX.

956
00:36:53,796 --> 00:36:56,930
So that's the key thing you need to do to make AirDrop

957
00:36:56,932 --> 00:36:59,733
work, it's just define the document type you

958
00:36:59,735 --> 00:37:01,901
are willing to have dropped on you.

959
00:37:01,903 --> 00:37:03,836
Okay?

960
00:37:03,837 --> 00:37:05,770
Now, once you've defined that, now the system,

961
00:37:05,773 --> 00:37:08,374
any time someone wants to open a GPX file,

962
00:37:08,376 --> 00:37:11,243
they're gonna ask me if I can do it in my app and

963
00:37:11,245 --> 00:37:13,678
they do that here in the AppDelegate.

964
00:37:13,680 --> 00:37:16,014
Now you can see the AppDelegate kind of gives you

965
00:37:16,016 --> 00:37:18,315
stubs for didFinishLaunchingWithOptions,

966
00:37:18,317 --> 00:37:21,552
ResignActive, EnterBackground, Foreground, even gives you

967
00:37:21,554 --> 00:37:24,554
a little explanation of when you're supposed to use those.

968
00:37:24,556 --> 00:37:26,289
We're not going to use any of those, so

969
00:37:26,291 --> 00:37:27,390
I'm gonna delete that.

970
00:37:27,392 --> 00:37:29,542
Okay?

971
00:37:29,543 --> 00:37:31,693
So you can go look at that in any app that you build,

972
00:37:31,696 --> 00:37:36,098
it's always going to put that, oops, those in there, so

973
00:37:36,100 --> 00:37:38,433
that you can find out about it.

974
00:37:38,435 --> 00:37:40,468
Don't ever delete this thing, though.

975
00:37:40,470 --> 00:37:42,303
[LAUGH] Var window.

976
00:37:42,305 --> 00:37:46,406
The AppDelegate has a pointer to the window where all your

977
00:37:46,408 --> 00:37:47,407
UI is.

978
00:37:47,408 --> 00:37:48,407
And it needs to have that.

979
00:37:48,410 --> 00:37:50,910
It gets set when the storyboard gets loaded.

980
00:37:50,912 --> 00:37:54,347
It is possible to reach into your UI here through this

981
00:37:54,349 --> 00:37:57,683
thing and start talking to your ViewControllers.

982
00:37:57,685 --> 00:37:59,685
I recommend against that.

983
00:37:59,687 --> 00:38:01,036
Okay?

984
00:38:01,037 --> 00:38:02,386
You do not want to be reaching down into there,

985
00:38:02,389 --> 00:38:04,422
because if you ever went into your storyboard and

986
00:38:04,424 --> 00:38:06,390
changed whether something was in a split view or

987
00:38:06,392 --> 00:38:08,959
in navigation controller, now this code's going to break,

988
00:38:08,961 --> 00:38:10,293
it's not going to work.

989
00:38:10,295 --> 00:38:13,963
And it also is not very object orientated in that MVCs should

990
00:38:13,965 --> 00:38:15,264
be their own thing and

991
00:38:15,266 --> 00:38:17,599
they should kind of work on their own.

992
00:38:17,601 --> 00:38:20,836
They shouldn't need some outside intervention to be

993
00:38:20,838 --> 00:38:24,105
coming in and talking to them to make them work, okay?

994
00:38:24,107 --> 00:38:26,507
You want to think of MVCs as these objects,

995
00:38:26,509 --> 00:38:28,509
essentially kind of meta objects,

996
00:38:28,511 --> 00:38:31,445
even though they're made up swift objects inside.

997
00:38:31,447 --> 00:38:34,648
But they have an API and they work on their own.

998
00:38:34,650 --> 00:38:35,448
They're independent.

999
00:38:35,450 --> 00:38:36,949
They do what they do,

1000
00:38:36,951 --> 00:38:40,953
just like any other well designed object oriented API.

1001
00:38:40,955 --> 00:38:43,021
All right. So the method that we want to

1002
00:38:43,023 --> 00:38:46,458
implement in our AppDelegate to open a URL is called

1003
00:38:46,460 --> 00:38:50,061
application handle OpenURL, you see it right here.

1004
00:38:50,063 --> 00:38:51,629
There's a lot of other things you can see.

1005
00:38:51,631 --> 00:38:53,330
There's, look at all these things.

1006
00:38:53,332 --> 00:38:56,633
Many, many things we can do here.

1007
00:38:56,635 --> 00:38:59,135
But we want handle open URL.

1008
00:38:59,137 --> 00:39:01,571
And all we need to do and handle OpenURL,

1009
00:39:01,573 --> 00:39:03,639
we got this URL is go deal with it.

1010
00:39:03,641 --> 00:39:06,508
So right now, I'm just going to print it out.

1011
00:39:06,510 --> 00:39:11,513
So I'm gonna say, url equals url.

1012
00:39:11,515 --> 00:39:12,931
Okay? Just so

1013
00:39:12,932 --> 00:39:14,348
we can see that our AirDrop is working.

1014
00:39:14,351 --> 00:39:17,618
And then you return true or false, whether you handled it.

1015
00:39:17,620 --> 00:39:19,219
So since all I'm going to do is print it out,

1016
00:39:19,221 --> 00:39:20,120
I'm gonna say, true.

1017
00:39:20,122 --> 00:39:21,721
Yes, I handled it.

1018
00:39:21,723 --> 00:39:22,889
Okay?

1019
00:39:22,891 --> 00:39:24,323
So that's all I'm gonna do first here.

1020
00:39:24,325 --> 00:39:27,092
We're gonna run just that and then I'm gonna do another

1021
00:39:27,094 --> 00:39:29,261
thing with notifications in a second here.

1022
00:39:29,263 --> 00:39:31,429
So here's called tracks.

1023
00:39:31,431 --> 00:39:36,500
I'm running it on the device here, as you can see.

1024
00:39:36,502 --> 00:39:39,903
Now the first time my app is installed where it is saying,

1025
00:39:39,905 --> 00:39:43,073
it can handle these new types, the system's going to

1026
00:39:43,075 --> 00:39:45,508
recognize, oh, this guy handles GPX.

1027
00:39:45,510 --> 00:39:46,676
Okay? So here's my app,

1028
00:39:46,678 --> 00:39:49,045
it didn't do anything, but it did register itself.

1029
00:39:49,047 --> 00:39:53,815
So now, I'm gonna go over here to my AirDrop again and

1030
00:39:53,817 --> 00:39:56,885
going to, hope this guy shows up.

1031
00:39:56,887 --> 00:39:58,886
So let's go back to our app here.

1032
00:39:58,888 --> 00:40:02,356
We're gonna run our app.

1033
00:40:02,358 --> 00:40:04,091
It's registered itself.

1034
00:40:04,093 --> 00:40:06,526
It says, oh yes, I handle GPX files.

1035
00:40:06,528 --> 00:40:10,230
So now, if I take a GPX file here, like this, and

1036
00:40:10,232 --> 00:40:14,467
drag it on, okay, does the same thing, it transferred

1037
00:40:14,469 --> 00:40:17,936
over, but notice the difference this time.

1038
00:40:17,938 --> 00:40:21,573
Okay, this time it doesn't say get app, it says, do you

1039
00:40:21,575 --> 00:40:25,543
accept it in tracks, because I'm running tracks right now.

1040
00:40:25,545 --> 00:40:27,278
So I'll say, yeah, I accept it.

1041
00:40:27,280 --> 00:40:30,948
And when I do, we're going to watch our console here

1042
00:40:30,950 --> 00:40:33,617
and its going to say at the bottom, its going to print out

1043
00:40:33,619 --> 00:40:36,553
the URL of the file after its been transferred.

1044
00:40:36,555 --> 00:40:40,690
So I hit accept and sure enough, right here, you see,

1045
00:40:40,692 --> 00:40:42,758
it's created this URL.

1046
00:40:42,760 --> 00:40:46,695
So it's put it in this place in my sandbox called documents

1047
00:40:46,697 --> 00:40:49,798
inbox vacation.gpx which we're going to talk about,

1048
00:40:49,800 --> 00:40:53,401
the file system, a little later in this demo.

1049
00:40:53,403 --> 00:40:55,936
So, this file, GPX, was transferred over,

1050
00:40:55,938 --> 00:41:01,475
put on the local hard disk, flash drive of our phone,

1051
00:41:01,477 --> 00:41:03,243
and made available to this app.

1052
00:41:03,245 --> 00:41:05,945
So now, I can open this URL up and do whatever I want.

1053
00:41:05,947 --> 00:41:09,982
So that's it, super simple to do AirDrop, it's just a matter

1054
00:41:09,984 --> 00:41:12,084
of registering those document types.

1055
00:41:12,086 --> 00:41:14,419
But, in real world here now,

1056
00:41:14,421 --> 00:41:17,855
if I had dragged the GPX file on my document, I really need

1057
00:41:17,857 --> 00:41:22,159
an NVC somewhere that can display this GPX file.

1058
00:41:22,161 --> 00:41:24,428
Okay?

1059
00:41:24,429 --> 00:41:26,696
Now, I guess I could go look at my window, and try and

1060
00:41:26,699 --> 00:41:28,832
look in a split view inside a navigation controller, and

1061
00:41:28,834 --> 00:41:31,734
find a view controller that can handle this GPX file, but

1062
00:41:31,736 --> 00:41:33,369
that would be really, really bad.

1063
00:41:33,371 --> 00:41:35,904
Really what I want to do is just have a radio station

1064
00:41:35,906 --> 00:41:39,274
that says, anybody who wants to find out when a GPX file

1065
00:41:39,276 --> 00:41:42,177
has been loaded into this app, listen to this radio station.

1066
00:41:42,179 --> 00:41:44,345
And then we're going to send a message on the radio station

1067
00:41:44,347 --> 00:41:45,680
saying, up, one arrived.

1068
00:41:46,716 --> 00:41:48,749
Okay, so that's how we're going to do this.

1069
00:41:49,918 --> 00:41:52,285
So let's start with the posting side,

1070
00:41:52,287 --> 00:41:55,254
where we're going to post on the radio station.

1071
00:41:55,256 --> 00:41:58,457
Now, when you have a radio station,

1072
00:41:58,459 --> 00:42:02,494
you need to have a name for that radio station.

1073
00:42:02,496 --> 00:42:06,064
I'm just going to create that as this kind of global struct.

1074
00:42:06,066 --> 00:42:09,434
I'm going to call it static let.

1075
00:42:09,436 --> 00:42:11,802
I'll call this GPXURL.

1076
00:42:11,804 --> 00:42:14,071
Actually, we'll call it notification.

1077
00:42:15,407 --> 00:42:17,607
So this is just a string which is the name of the radio

1078
00:42:17,609 --> 00:42:21,544
station, which we'll call the GPXURL Radio Station or

1079
00:42:21,546 --> 00:42:23,145
something like that.

1080
00:42:23,147 --> 00:42:25,681
Okay?

1081
00:42:25,682 --> 00:42:28,216
And so, all I need to do to post on this radio station,

1082
00:42:28,218 --> 00:42:30,651
whatever, is to get that center,

1083
00:42:30,653 --> 00:42:36,123
the NS notification center, default center.

1084
00:42:36,125 --> 00:42:37,691
So now I have the center, because I have to have

1085
00:42:37,693 --> 00:42:40,527
the notification center to either post or receive.

1086
00:42:40,529 --> 00:42:45,398
And then, I just need to create a notification,

1087
00:42:45,400 --> 00:42:47,199
which I do by saying NS notification.

1088
00:42:47,201 --> 00:42:49,401
And if you look at the creation of it,

1089
00:42:50,704 --> 00:42:53,271
you can create it with user info or not.

1090
00:42:53,273 --> 00:42:55,439
And I do want user info because,

1091
00:42:55,441 --> 00:42:58,442
when I send out on my radio station, I'm going to send

1092
00:42:58,444 --> 00:43:03,580
the URL along as part of my user info, okay?

1093
00:43:03,582 --> 00:43:05,348
So I want this one, and

1094
00:43:05,350 --> 00:43:09,685
the name of it is GPXURL.notification.

1095
00:43:09,687 --> 00:43:14,089
The object is myself, I'm the one sending on this station.

1096
00:43:14,091 --> 00:43:16,357
And user info is going to be.

1097
00:43:16,359 --> 00:43:20,127
Well I need the key, GPXURL.key.

1098
00:43:20,129 --> 00:43:21,895
We'll have to define that.

1099
00:43:21,897 --> 00:43:24,731
And the value is this URL that was just passed through.

1100
00:43:25,867 --> 00:43:27,966
There's no space here.

1101
00:43:27,968 --> 00:43:30,402
Maybe we'll go to a larger font here.

1102
00:43:30,404 --> 00:43:33,405
How about this?

1103
00:43:33,407 --> 00:43:35,773
That better?

1104
00:43:35,775 --> 00:43:36,607
Okay.

1105
00:43:36,609 --> 00:43:38,375
So I need to define this key, so

1106
00:43:38,377 --> 00:43:40,944
I'll put that up here as well.

1107
00:43:40,945 --> 00:43:43,512
Static let the Key and this is just a key in that dictionary,

1108
00:43:43,515 --> 00:43:48,117
that user info dictionary, so I'll call this GPXURL URL

1109
00:43:48,119 --> 00:43:49,852
key or something, I can call it whatever I want,

1110
00:43:49,854 --> 00:43:54,322
it just has to be a unique key inside this user info thing.

1111
00:43:54,324 --> 00:43:57,459
Okay, so, I've created the notification,

1112
00:43:57,461 --> 00:44:00,962
now I just tell the center post that notification.

1113
00:44:00,964 --> 00:44:02,830
Okay, notification, and

1114
00:44:02,832 --> 00:44:06,333
that's going to broadcast on that radio station.

1115
00:44:06,335 --> 00:44:09,803
So, anyone who's listening is going to find out when a URL

1116
00:44:09,805 --> 00:44:12,472
gets dropped into this app.

1117
00:44:12,474 --> 00:44:14,207
So now, how do we listen to the radio station?

1118
00:44:14,209 --> 00:44:15,708
Well, who wants to listen?

1119
00:44:15,710 --> 00:44:19,178
It's going to be this view controller over here.

1120
00:44:19,180 --> 00:44:22,514
So, I've got my storyboard right here and let's put

1121
00:44:22,516 --> 00:44:26,017
something in our storyboard like, how about a text view.

1122
00:44:26,019 --> 00:44:27,318
Where's the text view?

1123
00:44:28,321 --> 00:44:29,953
Here it is. So I'm going to drag this text

1124
00:44:29,955 --> 00:44:35,825
view in here, put this somewhere, maybe right there.

1125
00:44:35,827 --> 00:44:41,197
Okay, let's make sure we do our constraints, sorry, set

1126
00:44:41,199 --> 00:44:47,669
the constraints, let's take a look at these constraints.

1127
00:44:47,671 --> 00:44:50,638
Actually, I'm going to have the top space be

1128
00:44:50,640 --> 00:44:53,174
the standard value away.

1129
00:44:53,176 --> 00:44:53,774
Okay?

1130
00:44:53,776 --> 00:44:55,275
So I've got this text.

1131
00:44:55,277 --> 00:44:56,710
Let's get that out of there.

1132
00:44:56,712 --> 00:44:57,811
I've got this nice text field.

1133
00:44:57,813 --> 00:44:59,112
Let's go ahead and create an outlet for

1134
00:44:59,114 --> 00:45:03,315
that into our view controllers, control drag.

1135
00:45:03,317 --> 00:45:05,817
I'll call that textview, okay?

1136
00:45:05,819 --> 00:45:07,251
We don't need any of this.

1137
00:45:10,023 --> 00:45:11,021
Okay?

1138
00:45:11,023 --> 00:45:12,122
So, that's that.

1139
00:45:12,124 --> 00:45:14,357
So, we've got our text view outlet right here.

1140
00:45:14,359 --> 00:45:17,360
Now, all I'm going to do is when that radio station

1141
00:45:17,362 --> 00:45:21,397
broadcasts, I'm going to put the URL into that text view.

1142
00:45:21,399 --> 00:45:23,465
Okay now, on Wednesday, we'll do much more.

1143
00:45:23,467 --> 00:45:25,133
We'll put a map and we'll draw all this stuff, but here,

1144
00:45:25,135 --> 00:45:27,185
that's all I'm going to do.

1145
00:45:27,186 --> 00:45:29,236
So, I'm going to put this in viewDidLoad,

1146
00:45:29,239 --> 00:45:31,005
super.viewDidLoad.

1147
00:45:31,007 --> 00:45:32,006
Don't forget, by the way,

1148
00:45:32,008 --> 00:45:33,707
in your view controller life cycle methods,

1149
00:45:33,709 --> 00:45:34,741
you need to call super.

1150
00:45:34,743 --> 00:45:38,077
I noticed a few of you not doing that.

1151
00:45:38,079 --> 00:45:42,948
So, to make this work, I'm just going to get my center,

1152
00:45:42,950 --> 00:45:47,252
NSNotificationCenter, default center.

1153
00:45:47,254 --> 00:45:49,887
[SOUND] Default center.

1154
00:45:49,889 --> 00:45:51,322
Okay, I've got the center.

1155
00:45:51,324 --> 00:45:54,658
You remember that I need a cue to put it on.

1156
00:45:54,660 --> 00:45:56,660
So I'm going to do it on the main cue.

1157
00:45:56,662 --> 00:46:02,165
So, I'm going to do NSOperationQueue.mainQueue.

1158
00:46:02,167 --> 00:46:05,601
And, I'm looking for this URL broadcast

1159
00:46:05,603 --> 00:46:09,204
from the app delegate, which I can get by saying

1160
00:46:09,206 --> 00:46:14,075
UIApplication.sharedApplicati- on().delegate, because the app

1161
00:46:14,077 --> 00:46:16,444
delegate is just the delegate of UI applications.

1162
00:46:16,446 --> 00:46:20,014
So, now I have all the information I need to do this.

1163
00:46:20,016 --> 00:46:21,648
I'll make this even wider.

1164
00:46:21,650 --> 00:46:25,385
And I'm just going to center, add observer for name.

1165
00:46:25,387 --> 00:46:27,821
So here's the add observer for the name, right here.

1166
00:46:27,823 --> 00:46:31,024
Just the one we want, the one that has a block at the end.

1167
00:46:31,026 --> 00:46:34,860
The one we want is GPXURL.Notification.

1168
00:46:34,862 --> 00:46:37,863
We're interested when the app delegate sends it.

1169
00:46:37,865 --> 00:46:40,032
We want the queue to be that main queue.

1170
00:46:40,034 --> 00:46:45,770
And we're going to use our nice swift thing

1171
00:46:45,772 --> 00:46:51,542
where we can put a closure after a method like this.

1172
00:46:51,544 --> 00:46:52,342
Okay?

1173
00:46:52,344 --> 00:46:54,310
Here's the notification, right?

1174
00:46:54,312 --> 00:46:56,012
So we'll just say notification,

1175
00:46:56,014 --> 00:46:58,514
actually don't even need to put this

1176
00:46:58,516 --> 00:47:00,616
void business in there.

1177
00:47:00,618 --> 00:47:01,983
So there's the notification.

1178
00:47:01,985 --> 00:47:05,153
So inside here, this is going to be called every time that

1179
00:47:05,155 --> 00:47:06,220
radio station broadcasts,

1180
00:47:06,222 --> 00:47:09,023
in other words every time a URL is dropped in.

1181
00:47:09,025 --> 00:47:11,125
And so, all I"m going to do here is I'm going to say,

1182
00:47:12,261 --> 00:47:19,699
if let the URL equal the notification?.userInfo and

1183
00:47:19,701 --> 00:47:22,702
we'll look up in there the GPXURL.key, and

1184
00:47:22,704 --> 00:47:24,269
notice I had to put some question marks in there

1185
00:47:24,271 --> 00:47:26,371
because some of these are optionals.

1186
00:47:26,373 --> 00:47:29,074
Okay, this is probably not actually an optional.

1187
00:47:29,076 --> 00:47:33,744
But, and then, that is an NSURL because, remember,

1188
00:47:33,746 --> 00:47:38,148
that this user info dictionary, the values are any

1189
00:47:38,150 --> 00:47:43,219
object, so I have to cast it to what I actually want.

1190
00:47:43,221 --> 00:47:46,455
And now, I'm just going to say

1191
00:47:46,457 --> 00:47:51,827
self.textView.text equals Received this URL.

1192
00:47:51,829 --> 00:47:55,030
Okay?

1193
00:47:55,032 --> 00:47:56,831
Any questions about that?

1194
00:47:56,833 --> 00:48:02,169
So now, when I run this Trax,.

1195
00:48:02,171 --> 00:48:04,871
Instead of it putting it on the console,

1196
00:48:04,873 --> 00:48:07,807
it's gonna actually put it in the content,

1197
00:48:07,809 --> 00:48:09,475
that text view of track.

1198
00:48:09,477 --> 00:48:11,811
So let's go over here again.

1199
00:48:11,813 --> 00:48:13,412
Luckily this time it's showing.

1200
00:48:13,414 --> 00:48:14,312
There we go.

1201
00:48:14,314 --> 00:48:15,347
So let's go over here.

1202
00:48:15,348 --> 00:48:16,381
I'm just going to drag it on here.

1203
00:48:17,884 --> 00:48:19,784
Okay, it's asking me if I want to accept it again.

1204
00:48:19,786 --> 00:48:21,118
I'm gonna say Accept.

1205
00:48:21,120 --> 00:48:21,685
And there it is.

1206
00:48:21,687 --> 00:48:23,553
It puts it on there.

1207
00:48:24,723 --> 00:48:28,991
Okay, now interesting see it says it's Vacation-1.gpx

1208
00:48:28,993 --> 00:48:31,226
this time, where it was just vacation before.

1209
00:48:31,228 --> 00:48:35,963
And if I drag it on again, it's gonna be Vacation-2.

1210
00:48:35,965 --> 00:48:38,199
Okay, so it's collecting these things.

1211
00:48:38,201 --> 00:48:39,367
See Vacation-2?

1212
00:48:39,368 --> 00:48:40,534
So now I actually have three of these things that

1213
00:48:40,536 --> 00:48:41,768
I've dragged in three times.

1214
00:48:43,071 --> 00:48:45,038
Okay?

1215
00:48:45,039 --> 00:48:47,006
So you can see now how this ViewController right here

1216
00:48:47,008 --> 00:48:50,242
in an object-oriented way is very self-contained.

1217
00:48:50,244 --> 00:48:53,846
It displays GPX files somehow, and all it does is sign up to

1218
00:48:53,848 --> 00:48:56,581
the radio station that says I received one.

1219
00:48:56,583 --> 00:48:58,049
And then it goes and does what it does.

1220
00:48:58,051 --> 00:49:00,551
And again on Wednesday we'll actually draw the map.

1221
00:49:01,854 --> 00:49:03,220
Okay?

1222
00:49:03,222 --> 00:49:04,054
Any question about that?

1223
00:49:06,191 --> 00:49:07,356
All righty, that is it.

1224
00:49:07,358 --> 00:49:08,891
Back to our slides.

1225
00:49:10,828 --> 00:49:14,262
Where's my slides here?

1226
00:49:14,264 --> 00:49:18,933
Slides, okay, all right.

1227
00:49:18,935 --> 00:49:22,036
So the next thing we'll talk about is core motion.

1228
00:49:22,038 --> 00:49:26,406
So core motion is what's happening with the hardware.

1229
00:49:26,408 --> 00:49:30,176
And the primary inputs to that are the accelerometer,

1230
00:49:30,178 --> 00:49:32,278
the gyro, and the magnetometer.

1231
00:49:32,280 --> 00:49:34,046
Not all devices have all those things.

1232
00:49:34,048 --> 00:49:35,647
Newer devices have them all.

1233
00:49:35,649 --> 00:49:39,718
But older devices, some of them don't have it.

1234
00:49:39,720 --> 00:49:42,186
The class that you use to get all the information about this

1235
00:49:42,188 --> 00:49:45,690
is called CMMotionManager, so CM is core motion.

1236
00:49:45,692 --> 00:49:48,992
That's the name of the framework this is all in.

1237
00:49:48,994 --> 00:49:52,529
And so the motion manager, you really only want to have

1238
00:49:52,531 --> 00:49:56,632
one of these per app, because you only have one gyro, okay,

1239
00:49:56,634 --> 00:49:59,435
and one accelerometer, one magnetometer.

1240
00:49:59,437 --> 00:50:01,003
So you really want one of these.

1241
00:50:01,004 --> 00:50:02,570
So you want to put it in some global space and share it,

1242
00:50:02,573 --> 00:50:05,240
like maybe your app delegate would be a good place.

1243
00:50:05,242 --> 00:50:06,641
The way you use the motion manager,

1244
00:50:06,643 --> 00:50:08,042
there's really two ways to do it.

1245
00:50:08,044 --> 00:50:11,312
Polling, which is, you create one of these motion managers.

1246
00:50:11,314 --> 00:50:13,547
You check to see what hardware is available like,

1247
00:50:13,549 --> 00:50:15,749
is accelerometer available, gyro, or whatever.

1248
00:50:15,751 --> 00:50:19,085
And then you just start asking for the value over and over.

1249
00:50:19,087 --> 00:50:20,820
Usually, we don't do it that way.

1250
00:50:20,822 --> 00:50:21,887
We do it the second way,

1251
00:50:21,889 --> 00:50:24,690
which is, we check to see what's available.

1252
00:50:24,692 --> 00:50:27,559
And then if it's available, we say how often we want to

1253
00:50:27,561 --> 00:50:30,962
receive an update, 'kay, how often we want to get

1254
00:50:30,964 --> 00:50:33,331
the acceleration from the accelerometer for example.

1255
00:50:33,333 --> 00:50:36,033
And then you register a closure, 'kay,

1256
00:50:36,035 --> 00:50:39,169
a block of code, that will get called each time.

1257
00:50:39,171 --> 00:50:41,772
'Kay, so that's a much more sensible way to do this than

1258
00:50:41,774 --> 00:50:44,440
polling, and so that's the way we're going to do this.

1259
00:50:45,843 --> 00:50:47,343
Notice that I had mentioned checking

1260
00:50:47,345 --> 00:50:49,378
the availability of it.

1261
00:50:49,379 --> 00:50:51,412
Well, because some devices don't have a gyro, for

1262
00:50:51,415 --> 00:50:52,614
example, you have to check.

1263
00:50:52,616 --> 00:50:55,550
And you do that by just asking the motion manager,

1264
00:50:55,552 --> 00:50:57,551
accelerometer Available?

1265
00:50:57,553 --> 00:51:00,054
And that will return true if it's available and

1266
00:51:00,056 --> 00:51:01,455
false if it's not.

1267
00:51:01,457 --> 00:51:05,091
Okay, you can do that for all the different hardware things.

1268
00:51:05,093 --> 00:51:10,329
Then you start the motion manager reporting to you.

1269
00:51:10,331 --> 00:51:14,833
Now, again, if you're polling, you can just say start update.

1270
00:51:14,835 --> 00:51:17,002
And then it will start updating it, and

1271
00:51:17,004 --> 00:51:19,504
you can ask for the value at any time.

1272
00:51:19,506 --> 00:51:20,604
Okay? But we don't usually do

1273
00:51:20,606 --> 00:51:21,872
it that way.

1274
00:51:21,874 --> 00:51:23,573
We'll talk about that in a second.

1275
00:51:23,575 --> 00:51:26,676
And you can also find out whether the device is

1276
00:51:26,678 --> 00:51:29,479
actually looking at the accelerometer right now,

1277
00:51:29,481 --> 00:51:32,281
if anybody's interested in it, by saying accelerometer

1278
00:51:32,283 --> 00:51:35,417
Active, or gyro Active, deviceMotion Active.

1279
00:51:35,419 --> 00:51:37,586
We'll talk about deviceMotion in a second, what that is.

1280
00:51:38,689 --> 00:51:39,954
And you can stop it also, and

1281
00:51:39,956 --> 00:51:42,990
it's very important to stop it because this thing

1282
00:51:42,992 --> 00:51:46,694
uses a lot of battery, okay, so you do not want this

1283
00:51:46,696 --> 00:51:48,762
happening unless you're actually using the data.

1284
00:51:48,764 --> 00:51:50,864
That is very important to understand,

1285
00:51:50,866 --> 00:51:53,399
and that's true of the GPS location stuff as well,

1286
00:51:53,401 --> 00:51:55,201
which we're gonna talk about on Wednesday.

1287
00:51:55,203 --> 00:51:56,635
You really want to turn this stuff off if

1288
00:51:56,637 --> 00:51:58,620
you're not using it.

1289
00:51:58,621 --> 00:52:00,604
You do that with just saying, stop whatever Updates.

1290
00:52:00,607 --> 00:52:01,773
Okay? And that's true whether you're

1291
00:52:01,775 --> 00:52:04,175
polling or whether you're using the block-based one.

1292
00:52:05,945 --> 00:52:08,979
All right, so let's look at the data structures here.

1293
00:52:08,981 --> 00:52:10,698
They're very, very simple.

1294
00:52:10,699 --> 00:52:12,416
So, when you get acceleration data, it comes as x, y,

1295
00:52:12,418 --> 00:52:16,219
z in g, g meaning acceleration due to gravity.

1296
00:52:16,221 --> 00:52:18,388
All right?

1297
00:52:18,389 --> 00:52:20,556
So If I have this phone sitting flat right here,

1298
00:52:20,558 --> 00:52:25,160
it's going to be having the z-axis this way so it can tell

1299
00:52:25,162 --> 00:52:29,197
you this way and then y is this way and x is this way.

1300
00:52:29,199 --> 00:52:31,366
So if you were to move it this way you'd get a lot of x

1301
00:52:31,368 --> 00:52:32,867
acceleration and deceleration.

1302
00:52:32,869 --> 00:52:34,735
If you move it this way you're gonna get a lot of z

1303
00:52:34,737 --> 00:52:36,403
acceleration, deceleration.

1304
00:52:36,405 --> 00:52:38,805
And if you just get the acceleration data directly,

1305
00:52:38,807 --> 00:52:40,840
it includes the acceleration due to gravity.

1306
00:52:40,842 --> 00:52:44,910
So this phone right here, z is going to be 1.0 right now.

1307
00:52:44,912 --> 00:52:47,179
'Kay?

1308
00:52:47,180 --> 00:52:49,447
If I turn it this way now, x is gonna be 1.0.

1309
00:52:49,449 --> 00:52:51,049
'Kay?

1310
00:52:51,050 --> 00:52:52,650
Cuz it's got acceleration due to gravity.

1311
00:52:52,651 --> 00:52:54,251
Now if you have a gyro, you can get the acceleration

1312
00:52:54,254 --> 00:52:56,387
without gravity, and we'll talk about that in a second.

1313
00:52:56,389 --> 00:52:59,189
If you get the gyro information,

1314
00:52:59,191 --> 00:53:01,358
then it's going to tell you about rotation rate.

1315
00:53:01,360 --> 00:53:04,094
And it's going to tell you how fast the device

1316
00:53:04,096 --> 00:53:07,497
is rotating in the x, y, or z directions.

1317
00:53:07,499 --> 00:53:10,666
Okay, that's what a gyro tells you, is the rate of rotation.

1318
00:53:12,102 --> 00:53:15,437
The magnetometer is going to tell you

1319
00:53:15,439 --> 00:53:17,171
basically the magnetic field,

1320
00:53:17,173 --> 00:53:21,008
around your device, in each of the directions.

1321
00:53:21,010 --> 00:53:22,242
Okay.

1322
00:53:22,244 --> 00:53:23,476
That's what a magnetometer does.

1323
00:53:23,478 --> 00:53:24,994
It tells you magnetic field.

1324
00:53:24,995 --> 00:53:26,511
That's how you can detect where true north is,

1325
00:53:26,514 --> 00:53:29,448
for example.

1326
00:53:29,450 --> 00:53:32,584
Now there's a very interesting one which is

1327
00:53:32,586 --> 00:53:34,920
CMDeviceMotion, okay?

1328
00:53:34,922 --> 00:53:38,123
So it's another thing like accelerometer, gyro, or

1329
00:53:38,125 --> 00:53:39,708
magnetometer.

1330
00:53:39,709 --> 00:53:41,292
But the CMDeviceMotion is actually a combination

1331
00:53:41,294 --> 00:53:42,493
of those things.

1332
00:53:42,495 --> 00:53:45,195
So for CMDeviceMotion, if you ask for

1333
00:53:45,197 --> 00:53:48,398
CMDeviceMotion updates, when you get to gravity,

1334
00:53:48,400 --> 00:53:49,733
it's going to give you gravity.

1335
00:53:50,735 --> 00:53:54,336
It's going to give you the user acceleration

1336
00:53:54,338 --> 00:53:55,604
without gravity.

1337
00:53:55,605 --> 00:53:56,871
In other words, it will separate gravity out, so

1338
00:53:56,874 --> 00:53:59,541
you can find out where gravity is, where that's pointing.

1339
00:53:59,543 --> 00:54:01,576
Right? Where is gravity pointing and

1340
00:54:01,578 --> 00:54:03,577
where is the user accelerating, separated?

1341
00:54:03,579 --> 00:54:06,213
And it can do that because it has the gyro.

1342
00:54:06,215 --> 00:54:08,182
Right? So

1343
00:54:08,183 --> 00:54:10,150
it know what's happening this way, so it can tell you

1344
00:54:10,152 --> 00:54:13,086
what's acceleration and what's rotation.

1345
00:54:13,088 --> 00:54:14,087
Okay? And similarly, for

1346
00:54:14,089 --> 00:54:15,354
the rotation,

1347
00:54:15,356 --> 00:54:18,390
it can give you unbiased data about the rotation.

1348
00:54:18,392 --> 00:54:20,926
Okay? Because it knows fixed points.

1349
00:54:20,928 --> 00:54:22,660
Maybe the magnetometer, for example,

1350
00:54:22,662 --> 00:54:24,462
can tell us fixed points.

1351
00:54:24,464 --> 00:54:27,131
And, so now you can get the attitude of your device

1352
00:54:27,133 --> 00:54:28,632
with roll, pitch, and yaw.

1353
00:54:28,634 --> 00:54:29,733
You all know what that is?

1354
00:54:29,735 --> 00:54:31,167
It's, kind of, an airplane thing.

1355
00:54:31,169 --> 00:54:35,705
Right, so roll is how much you're rolling the device,

1356
00:54:35,707 --> 00:54:37,573
pitch is how much you're pitching it up and

1357
00:54:37,575 --> 00:54:38,640
down, right?

1358
00:54:38,642 --> 00:54:40,308
And then, yaw is,

1359
00:54:40,309 --> 00:54:41,975
kinda, how much you're rotating this direction.

1360
00:54:41,978 --> 00:54:45,546
So it can give you that pure information unbiased if it has

1361
00:54:45,548 --> 00:54:48,249
both the accelerometer, so it knows where down is, for

1362
00:54:48,251 --> 00:54:49,783
example, or magnetometer.

1363
00:54:49,785 --> 00:54:51,852
And gyro has them all, can combine them.

1364
00:54:51,854 --> 00:54:54,988
So CMDeviceMotion is a really powerful mechanism to

1365
00:54:54,990 --> 00:54:56,522
kinda get real data.

1366
00:54:56,524 --> 00:54:59,425
And same thing with magnetic field, okay?

1367
00:55:00,894 --> 00:55:04,329
So how do you do this with not polling?

1368
00:55:04,331 --> 00:55:06,564
You do this registering a block.

1369
00:55:06,566 --> 00:55:09,033
You just say, for example, for accelerometer,

1370
00:55:09,035 --> 00:55:11,402
startAccelerometerUpdatesToQu- eue.

1371
00:55:11,404 --> 00:55:13,236
You give it queue, like the main queue, for

1372
00:55:13,238 --> 00:55:15,939
example, where you want this block to execute.

1373
00:55:15,941 --> 00:55:18,975
And then you give it the handler, and the handler just

1374
00:55:18,977 --> 00:55:22,645
takes an argument which is the data, the accelerometer data,

1375
00:55:22,647 --> 00:55:24,847
and an error, if it got some sort of error.

1376
00:55:24,849 --> 00:55:26,148
And you can get errors.

1377
00:55:26,150 --> 00:55:30,752
And similar for the gyro, similar for the DeviceMotion.

1378
00:55:30,754 --> 00:55:34,088
And some of the errors you can get are things like

1379
00:55:34,090 --> 00:55:36,557
this activity is not authorized.

1380
00:55:36,559 --> 00:55:38,892
Because the user can actually go into their settings on your

1381
00:55:38,894 --> 00:55:41,661
device and say I don't want this app to

1382
00:55:42,664 --> 00:55:44,630
get motion information from me.

1383
00:55:45,599 --> 00:55:50,001
Okay, and other errors there, like requires movement.

1384
00:55:50,003 --> 00:55:52,170
Obviously if you're asking for device motion and

1385
00:55:52,172 --> 00:55:54,705
the device is sitting on the tabletop, it's not moving.

1386
00:55:54,707 --> 00:55:58,242
It can't give you any information.

1387
00:55:58,244 --> 00:56:01,011
You set the rate at which this closure is gonna be

1388
00:56:01,013 --> 00:56:03,747
called by set accelerometerUpdateInterval to

1389
00:56:03,749 --> 00:56:06,816
whatever you want or deviceMotionUpdateInterval to

1390
00:56:06,818 --> 00:56:09,552
whatever you want as you might expect.

1391
00:56:09,554 --> 00:56:11,320
It's in seconds, all right?

1392
00:56:11,322 --> 00:56:14,289
So, you don't wanna set this to high a rate.

1393
00:56:14,291 --> 00:56:15,690
Like if you set this higher then,

1394
00:56:16,826 --> 00:56:19,727
maybe 30 to 60 hertz, it really can't

1395
00:56:19,729 --> 00:56:22,229
barely even give you that information that fast.

1396
00:56:22,231 --> 00:56:24,464
And you're gonna be calling your block a lot more and

1397
00:56:24,466 --> 00:56:27,067
you're gonna be using a lot of power.

1398
00:56:27,069 --> 00:56:30,136
And so you really want to be careful to kinda do this at

1399
00:56:30,138 --> 00:56:33,305
a rate that gives you smooth response for whatever you're,

1400
00:56:33,307 --> 00:56:35,674
however you're reacting, but not overly.

1401
00:56:35,676 --> 00:56:37,342
In fact, you might get a smoother response if you

1402
00:56:37,344 --> 00:56:38,276
slow it down a little.

1403
00:56:38,278 --> 00:56:39,210
'Kay?

1404
00:56:39,212 --> 00:56:40,745
Cuz if try to update too much,

1405
00:56:40,747 --> 00:56:41,745
it might be a little too choppy.

1406
00:56:41,747 --> 00:56:44,748
So be careful with that update interval.

1407
00:56:44,750 --> 00:56:49,452
You can call that start gyro update with this handler

1408
00:56:49,454 --> 00:56:51,821
multiple times and have multiple blocks going on, and

1409
00:56:51,823 --> 00:56:53,255
that's perfectly legal.

1410
00:56:53,257 --> 00:56:55,223
'Kay? Even though you only have one

1411
00:56:55,225 --> 00:56:58,526
gyro, the motion manager can still call multiple different

1412
00:56:58,528 --> 00:56:59,627
blocks if you want.

1413
00:56:59,629 --> 00:57:01,062
Okay, or accelerometer.

1414
00:57:01,064 --> 00:57:03,731
Any time I use an example, gyro, accelerometer,

1415
00:57:03,733 --> 00:57:06,066
magnetometer, device motion, they're all exactly the same.

1416
00:57:07,736 --> 00:57:10,670
Okay, so, the demo I have for this is called Bouncer,

1417
00:57:10,672 --> 00:57:14,440
and what we're going to do is we are going to do a dynamic

1418
00:57:14,442 --> 00:57:18,910
animation, but we're gonna use real gravity, as the gravity.

1419
00:57:18,912 --> 00:57:21,680
'Kay, we're gonna hook up a gravity behavior to

1420
00:57:21,682 --> 00:57:23,281
actual real gravity.

1421
00:57:23,283 --> 00:57:24,115
'Kay?

1422
00:57:24,117 --> 00:57:26,216
So how do we do that?

1423
00:57:26,218 --> 00:57:29,186
[SOUND] We're not actually gonna hook it up to real

1424
00:57:29,188 --> 00:57:31,221
gravity.

1425
00:57:31,222 --> 00:57:33,255
We're gonna hook it up to real device acceleration.

1426
00:57:33,258 --> 00:57:36,025
So the user can kinda move it around and

1427
00:57:36,027 --> 00:57:37,693
also will be using gravity as well.

1428
00:57:37,695 --> 00:57:40,129
So as I move my device around,

1429
00:57:40,131 --> 00:57:42,964
I'm going to be having my dynamic animator affected by

1430
00:57:42,966 --> 00:57:46,534
whatever acceleration the device is going through.

1431
00:57:46,536 --> 00:57:48,035
All right.

1432
00:57:48,037 --> 00:57:50,570
So let's go here to Bouncer.

1433
00:57:52,174 --> 00:57:56,509
It's a new project again, it's iOS apps,

1434
00:57:56,511 --> 00:57:59,011
single view, Bouncer.

1435
00:57:59,013 --> 00:58:02,681
Okay, and put it in the place that we always do.

1436
00:58:02,683 --> 00:58:04,616
Now, one thing I'm gonna do for

1437
00:58:04,618 --> 00:58:07,318
Bouncer to make it a little easier on myself,

1438
00:58:07,320 --> 00:58:11,122
is I'm gonna make Bouncer not work in landscape mode.

1439
00:58:11,124 --> 00:58:12,089
I'm sure you'd like to do this for

1440
00:58:12,091 --> 00:58:13,557
your homework assignment, as well.

1441
00:58:14,626 --> 00:58:16,926
But we are just going to make a portrait only.

1442
00:58:16,928 --> 00:58:19,128
Just to make the code a little simpler, cuz it's a demo.

1443
00:58:19,130 --> 00:58:20,996
But we usually wouldn't do that in an app,

1444
00:58:20,998 --> 00:58:22,330
making it not work in landscape.

1445
00:58:22,332 --> 00:58:24,198
Users kinda don't like that very much.

1446
00:58:26,169 --> 00:58:27,067
Okay. So,

1447
00:58:27,069 --> 00:58:29,436
I'm going to start right off the bat

1448
00:58:29,438 --> 00:58:32,505
by creating a dynamic behavior, okay?

1449
00:58:32,507 --> 00:58:34,907
Just like we did in the last one.

1450
00:58:34,909 --> 00:58:36,776
So it's gonna be UiDynamicBahavior.

1451
00:58:36,778 --> 00:58:40,279
I'm gonna call it BouncerBehavior, 'kay?

1452
00:58:40,281 --> 00:58:44,349
Cause I wanna capsulate all the behavior of the bouncer

1453
00:58:44,351 --> 00:58:48,586
into one class just like we did in Drop It, okay?

1454
00:58:48,588 --> 00:58:50,287
So here our BouncerBehavior.

1455
00:58:50,289 --> 00:58:53,190
I'm going to cheat and go over to DropIt.

1456
00:58:53,192 --> 00:58:57,727
And steal a lot of the code out of there, so

1457
00:58:57,729 --> 00:59:01,597
let's go over to DropItBehavior.

1458
00:59:01,599 --> 00:59:05,001
Here's DropItBehavior, so I'm gonna actually copy the whole

1459
00:59:05,003 --> 00:59:06,602
thing and paste it over here.

1460
00:59:06,604 --> 00:59:08,403
[SOUND] 'Kay?

1461
00:59:08,405 --> 00:59:13,274
Now the differences between drop it and

1462
00:59:13,276 --> 00:59:18,445
my bouncing behavior are kinda twofold.

1463
00:59:18,447 --> 00:59:20,180
Well, really, one major difference again is

1464
00:59:20,182 --> 00:59:22,415
the gravity is gonna be driven by real gravity.

1465
00:59:22,417 --> 00:59:25,451
But also I want the elasticity to be a little bit higher.

1466
00:59:25,453 --> 00:59:28,454
Also, as some of you have noticed, you really want

1467
00:59:28,456 --> 00:59:35,060
the friction to be off, and the resistance to be off.

1468
00:59:35,062 --> 00:59:37,629
Okay, you probably want that true for your breakout as

1469
00:59:37,631 --> 00:59:39,530
well, cuz you want the thing to bounce around and

1470
00:59:39,532 --> 00:59:40,731
flow naturally.

1471
00:59:40,733 --> 00:59:41,565
So we do that.

1472
00:59:41,567 --> 00:59:43,150
The other thing, too,

1473
00:59:43,151 --> 00:59:44,734
is I don't really wanna call these things drops,

1474
00:59:44,737 --> 00:59:47,237
because bouncer, they're not really dropping.

1475
00:59:47,239 --> 00:59:48,555
They're kinda bouncing around.

1476
00:59:48,556 --> 00:59:49,872
They're just little blocks that are bouncing around.

1477
00:59:49,874 --> 00:59:51,907
So I'm gonna change those things.

1478
00:59:51,909 --> 00:59:54,143
I'm gonna do Find and Replace in project here.

1479
00:59:54,145 --> 00:59:57,312
And hopefully you've found this little gem.

1480
00:59:57,314 --> 01:00:02,283
And I'm gonna replace drop with block.

1481
01:00:02,285 --> 01:00:05,119
So I wanna call these things blocks instead of drops.

1482
01:00:05,121 --> 01:00:06,887
So I'm just gonna Replace All.

1483
01:00:06,889 --> 01:00:09,990
We don't wanna do snapshots.

1484
01:00:09,992 --> 01:00:12,225
I'll do it for both cases.

1485
01:00:12,227 --> 01:00:15,461
Upper and lower case, Replace All.

1486
01:00:15,463 --> 01:00:18,597
So now I have this block,

1487
01:00:18,599 --> 01:00:20,799
this bouncer behavior that works on blocks.

1488
01:00:20,801 --> 01:00:23,835
You see addBlock, removeBlock.

1489
01:00:23,837 --> 01:00:26,237
But otherwise, pretty much the same.

1490
01:00:26,239 --> 01:00:28,539
'Kay. I'm just gonna tie its gravity

1491
01:00:28,541 --> 01:00:29,607
to the accelerometer.

1492
01:00:30,676 --> 01:00:31,675
Okay?

1493
01:00:31,677 --> 01:00:33,777
Everyone cool with where I am so far?

1494
01:00:33,779 --> 01:00:37,113
So let's go to, and I'm just gonna do this all

1495
01:00:37,115 --> 01:00:38,948
in this view controller right here.

1496
01:00:38,950 --> 01:00:40,683
I'm not gonna create a game view or

1497
01:00:40,685 --> 01:00:43,485
do all those things because we only have ten minutes left.

1498
01:00:43,487 --> 01:00:45,286
Wanna be able to do this whole demo.

1499
01:00:45,288 --> 01:00:47,488
So I'm just going to put it all in the top level view of

1500
01:00:47,490 --> 01:00:49,090
my view controller,

1501
01:00:49,091 --> 01:00:50,691
which you would never do, you don't usually wanna draw

1502
01:00:50,693 --> 01:00:53,060
directly in the top level view of your view controller.

1503
01:00:53,062 --> 01:00:55,729
The top level view of your view controller is for

1504
01:00:55,731 --> 01:00:58,331
subviews, okay, you put subviews in there.

1505
01:00:58,333 --> 01:01:01,968
But I'm gonna draw straight in there,

1506
01:01:01,970 --> 01:01:06,305
my bouncing ball, just for expediency sake.

1507
01:01:07,441 --> 01:01:11,876
So I need a bouncer, which is my bouncer behavior, 'kay, so

1508
01:01:11,878 --> 01:01:13,811
that's just one of those things I just created,

1509
01:01:13,813 --> 01:01:15,813
all right, that has the gravity and

1510
01:01:15,815 --> 01:01:17,264
collision behaviors and

1511
01:01:17,265 --> 01:01:18,714
all that stuff that I stole from drop it.

1512
01:01:18,717 --> 01:01:21,317
And of course, I need an animator.

1513
01:01:22,320 --> 01:01:24,687
So I'm gonna create a UIDynamicAnimator.

1514
01:01:25,623 --> 01:01:27,656
And do the same thing I did before which

1515
01:01:27,658 --> 01:01:31,926
is UIDynamicAnimator, referenceView.

1516
01:01:31,928 --> 01:01:33,461
Self.view.

1517
01:01:33,463 --> 01:01:34,628
Okay? Instead of game view into

1518
01:01:34,630 --> 01:01:36,747
self.view.

1519
01:01:36,748 --> 01:01:38,865
So I'm creating that lazy as we did before, so

1520
01:01:38,867 --> 01:01:43,169
I need to make this closure be executed to do this, okay?

1521
01:01:43,171 --> 01:01:45,037
It's the same as drop it.

1522
01:01:45,039 --> 01:01:46,638
Oops, this is, must be colon.

1523
01:01:47,741 --> 01:01:49,191
All right?

1524
01:01:49,192 --> 01:01:50,642
So now I've got my bouncer and animator, so

1525
01:01:50,644 --> 01:01:52,810
I'm just going to in viewDidLoad.

1526
01:01:52,812 --> 01:02:00,017
I'm just gonna say animator, addBehavior, the bouncer.

1527
01:02:00,019 --> 01:02:03,053
'Kay? So now I've got this going.

1528
01:02:03,055 --> 01:02:06,022
Course, super.viewDidLoad, I just talked about that,

1529
01:02:06,024 --> 01:02:07,657
so don't wanna do that.

1530
01:02:07,659 --> 01:02:08,224
All right?

1531
01:02:08,226 --> 01:02:08,991
So there we go.

1532
01:02:08,993 --> 01:02:10,726
So now we've got an animator.

1533
01:02:10,728 --> 01:02:14,295
Anything we add now to the bouncer is going to start

1534
01:02:14,297 --> 01:02:17,098
being affected by the bouncer behavior.

1535
01:02:17,100 --> 01:02:18,833
If you, which we mostly stole from DropIt.

1536
01:02:18,835 --> 01:02:20,534
All right, so how many?

1537
01:02:20,536 --> 01:02:22,502
Well, I'm gonna just add a block,

1538
01:02:22,504 --> 01:02:26,006
a little red block to my view which

1539
01:02:26,008 --> 01:02:29,609
I'm gonna then be controlling with the accelerometer.

1540
01:02:29,611 --> 01:02:32,244
So let's have a little function here called addBlock.

1541
01:02:32,246 --> 01:02:35,147
It's going to return a UIView.

1542
01:02:35,149 --> 01:02:38,483
Okay, there's a block that I'm gonna add here, so

1543
01:02:38,485 --> 01:02:43,087
let's create a new UIView, and its frame.

1544
01:02:43,089 --> 01:02:44,422
Let's start out.

1545
01:02:44,424 --> 01:02:46,290
Let's do CGRect.

1546
01:02:46,292 --> 01:02:50,560
We'll have its origin be CGPoint.zeroPoint,

1547
01:02:50,562 --> 01:02:52,995
then I'll move it in the second to the right place.

1548
01:02:52,997 --> 01:02:54,964
And we probably want a constant here for

1549
01:02:54,966 --> 01:02:56,065
the block size.

1550
01:02:56,067 --> 01:03:01,102
So let's put a constant here, struct Constants.

1551
01:03:02,205 --> 01:03:05,139
I really take the extra time to do this constants thing

1552
01:03:05,141 --> 01:03:07,975
because you really don't wanna have magic numbers spread

1553
01:03:07,977 --> 01:03:09,576
all out through all your code, okay?

1554
01:03:09,578 --> 01:03:13,146
You really wanna have your constants put into structs or

1555
01:03:13,148 --> 01:03:16,349
grouped, or name space or something to get them so

1556
01:03:16,351 --> 01:03:19,352
that they're not scattered about your code.

1557
01:03:19,354 --> 01:03:21,487
Otherwise, people won't know what's really going on.

1558
01:03:21,489 --> 01:03:24,756
So, I'm gonna let BlockSize equal CGSize.

1559
01:03:25,692 --> 01:03:27,692
We'll just have block be 40 by 40.

1560
01:03:27,694 --> 01:03:30,627
That's a good starting size.

1561
01:03:30,629 --> 01:03:33,030
We can see if we don't like it later.

1562
01:03:33,032 --> 01:03:35,265
So now, let's move the block to where we want, and

1563
01:03:35,267 --> 01:03:36,566
I'm gonna start the block out

1564
01:03:36,568 --> 01:03:37,967
right in the center of the view.

1565
01:03:37,969 --> 01:03:43,338
So that's just CGPoint, and, we'll say,

1566
01:03:43,340 --> 01:03:49,110
view.bounds.midX and view.bounds.midY.

1567
01:03:49,112 --> 01:03:52,980
Again, notice that I'm using the bounds, not the frame.

1568
01:03:52,982 --> 01:03:54,381
The frame would be my views,

1569
01:03:54,383 --> 01:03:56,683
super view which like the window or something.

1570
01:03:56,685 --> 01:03:58,951
So I'd only use frame there.

1571
01:03:58,953 --> 01:04:02,421
Then we'll add that SubView(block), and

1572
01:04:02,423 --> 01:04:05,124
we'll return the block.

1573
01:04:05,126 --> 01:04:08,193
Okay, so now I have a way of basically

1574
01:04:08,195 --> 01:04:12,597
adding a block to the center of my view, okay?

1575
01:04:12,599 --> 01:04:17,301
So now that I have that, let's go ahead and add the block.

1576
01:04:17,303 --> 01:04:19,036
And I'm gonna do that,

1577
01:04:19,037 --> 01:04:20,770
I'm gonna add that block in my viewDidAppear.

1578
01:04:20,773 --> 01:04:23,673
So as soon as my view appears if the block has not

1579
01:04:23,675 --> 01:04:25,108
been added, I'm gonna add it.

1580
01:04:25,110 --> 01:04:26,275
Okay, and that's a common thing,

1581
01:04:26,277 --> 01:04:29,211
again, to wait until view did appear to do something,

1582
01:04:29,213 --> 01:04:32,614
because you don't want to waste your time doing it until

1583
01:04:32,616 --> 01:04:33,848
it's actually gonna be on screen.

1584
01:04:33,850 --> 01:04:35,983
So in view did appear, here.

1585
01:04:35,985 --> 01:04:38,519
I'm gonna call super dot view did appear.

1586
01:04:40,489 --> 01:04:43,790
And I need a little variable for my block.

1587
01:04:43,792 --> 01:04:47,160
I'm going to make it be red, so

1588
01:04:47,162 --> 01:04:49,095
I'm going to call it red block.

1589
01:04:51,198 --> 01:04:54,800
UIView, okay it's an optional, it starts out nil.

1590
01:04:54,802 --> 01:04:59,937
And if my red block has not set yet, so if it equals nil.

1591
01:04:59,939 --> 01:05:01,605
Let em create my red block just by

1592
01:05:01,607 --> 01:05:03,507
saying red block equals ab block,

1593
01:05:03,509 --> 01:05:05,876
which is that function I just called, so now I created it.

1594
01:05:05,878 --> 01:05:09,679
We're gonna make my red block be red by Jane setting it to

1595
01:05:09,681 --> 01:05:14,150
background color equal to UI color red color.

1596
01:05:14,152 --> 01:05:15,451
So I created this red block.

1597
01:05:18,555 --> 01:05:20,655
I'm gonna add Red Block to the bouncer.

1598
01:05:22,825 --> 01:05:24,324
And it should start bouncing.

1599
01:05:24,326 --> 01:05:25,859
So let's go take a look.

1600
01:05:25,861 --> 01:05:27,694
This is all we really need to do.

1601
01:05:27,696 --> 01:05:32,932
We need to, exclamation point there, okay?

1602
01:05:32,934 --> 01:05:35,267
So, that should be all that is necessary to make this thing

1603
01:05:35,269 --> 01:05:37,302
happen, so let's go ahead and run this, all right?

1604
01:05:37,304 --> 01:05:39,021
Just in time, there's Bouncer.

1605
01:05:39,022 --> 01:05:40,739
And sure enough, bouncer is bouncing.

1606
01:05:40,741 --> 01:05:44,108
Okay, now, it's bouncing exactly like drop it,

1607
01:05:44,110 --> 01:05:46,644
because I stole drop it's behavior out of drop it,

1608
01:05:46,646 --> 01:05:48,112
and so it's just like that.

1609
01:05:48,114 --> 01:05:51,014
Now, if I move the phone, I pick the phone up here, and

1610
01:05:51,016 --> 01:05:52,816
I'm moving it around, nothing happens.

1611
01:05:52,818 --> 01:05:54,017
It doesn't do anything, right,

1612
01:05:54,019 --> 01:05:57,153
because gravity is just set to be down at the bottom of

1613
01:05:57,155 --> 01:05:59,455
the screen which is the default for gravity behavior.

1614
01:05:59,457 --> 01:06:02,324
So what we want to do here is link the acceleration of

1615
01:06:02,326 --> 01:06:06,728
the device, the accelerometer to the gravity, okay?

1616
01:06:06,730 --> 01:06:08,529
So that when I tilt it this way,

1617
01:06:08,531 --> 01:06:09,797
this thing will slide down that way.

1618
01:06:09,799 --> 01:06:11,665
And if I tilt it this way, it'll slide over that way, and

1619
01:06:11,667 --> 01:06:13,466
I'll kind of, I can move it around that way.

1620
01:06:13,468 --> 01:06:15,535
All right, so how do we do that?

1621
01:06:15,537 --> 01:06:16,869
It's quite simple, actually.

1622
01:06:16,871 --> 01:06:19,304
First thing we need is a motion manager.

1623
01:06:19,306 --> 01:06:22,040
And I told you that really wants to be a global thing

1624
01:06:22,042 --> 01:06:23,592
in your app.

1625
01:06:23,593 --> 01:06:25,143
So I'm gonna put it in a global place,

1626
01:06:25,145 --> 01:06:26,878
which is my app delegate.

1627
01:06:26,880 --> 01:06:29,613
So I'm actually gonna go over to my app delegate and

1628
01:06:29,615 --> 01:06:30,914
get rid of all of this.

1629
01:06:33,485 --> 01:06:35,435
Okay?

1630
01:06:35,436 --> 01:06:37,386
And I'm gonna put a struct in here which

1631
01:06:37,389 --> 01:06:41,657
I'm gonna call Motion and I'm going to have a static in here

1632
01:06:41,659 --> 01:06:46,628
which is the Manager equals CM Motion Manager.

1633
01:06:46,630 --> 01:06:47,762
Now look, I'm trying to type,

1634
01:06:47,764 --> 01:06:49,864
how come Xcode's not helping me here?

1635
01:06:49,866 --> 01:06:52,933
Well that's because the motion stuff is in a different

1636
01:06:52,935 --> 01:06:57,037
framework that has to be imported, okay?

1637
01:06:57,039 --> 01:06:58,171
So you have to import

1638
01:06:58,173 --> 01:07:00,406
core motion if you want to use any of that.

1639
01:07:00,408 --> 01:07:02,742
As soon as you do that,

1640
01:07:02,743 --> 01:07:05,077
it's going to start escape completing here, all right?

1641
01:07:05,079 --> 01:07:08,080
So I could put other things in this motion struct if I had,

1642
01:07:08,082 --> 01:07:10,682
maybe I wanted the rate at which I'm asking for

1643
01:07:10,684 --> 01:07:12,350
these things to be global.

1644
01:07:12,351 --> 01:07:14,017
Maybe I'll put that as a constant in here as well.

1645
01:07:15,054 --> 01:07:16,520
But here I'm just gonna have the manager.

1646
01:07:16,522 --> 01:07:19,890
So everybody in my app who's gonna use motion

1647
01:07:19,892 --> 01:07:23,660
needs to ask the app delegate for this motion manager.

1648
01:07:23,662 --> 01:07:26,929
And that way they'll all be using the same one, okay?

1649
01:07:26,931 --> 01:07:29,498
Now I could have put this struct actually outside of

1650
01:07:29,500 --> 01:07:32,835
the app delegate and just said motion.manager and

1651
01:07:32,837 --> 01:07:34,620
had that be it.

1652
01:07:34,621 --> 01:07:36,404
But here I actually want to kind of explicitly make it

1653
01:07:36,407 --> 01:07:38,606
clear that when you are in this app.

1654
01:07:38,608 --> 01:07:42,210
This is where this app gets its motion manager, 'kay?

1655
01:07:42,212 --> 01:07:44,011
And that might seem non-object-oriented,

1656
01:07:44,013 --> 01:07:47,281
except that for again, this is a global resource.

1657
01:07:47,283 --> 01:07:50,784
We want to explicitly be sharing it, okay?

1658
01:07:50,786 --> 01:07:52,652
So, that's why I put it in my AppDelegate.

1659
01:07:53,755 --> 01:07:55,888
So, now I can get it, here.

1660
01:07:55,890 --> 01:07:57,089
I'm gonna say,

1661
01:07:57,091 --> 01:08:01,726
let motionManager equal my AppDelegate.Motion.Manager.

1662
01:08:01,728 --> 01:08:04,328
Notice I made it capital because it's essentially

1663
01:08:04,330 --> 01:08:05,162
a constant.

1664
01:08:06,098 --> 01:08:08,665
Motion.Manager is essentially a constant.

1665
01:08:09,768 --> 01:08:11,934
And so I'm going set the update in a roll.

1666
01:08:11,936 --> 01:08:14,170
Well first of all I have to always check to make sure

1667
01:08:14,172 --> 01:08:16,038
I have an accelerometer, it might be working on

1668
01:08:16,040 --> 01:08:17,739
a device without it so I'm going to say.

1669
01:08:17,741 --> 01:08:22,543
Motion manager, accelerometer available, sometimes people

1670
01:08:22,545 --> 01:08:26,013
escape complete and they end up putting here active and

1671
01:08:26,015 --> 01:08:27,581
they're like, why doesn't this work?

1672
01:08:27,583 --> 01:08:30,684
Okay, active is whether it's actively reporting

1673
01:08:30,686 --> 01:08:32,919
the accelerometer.

1674
01:08:32,921 --> 01:08:34,987
Available is whether the hardware is actually

1675
01:08:34,989 --> 01:08:36,255
available, so be careful there.

1676
01:08:38,426 --> 01:08:41,159
So if it's available then I'm just going to

1677
01:08:41,161 --> 01:08:43,261
start getting updates.

1678
01:08:43,262 --> 01:08:45,362
So again I'm gonna go wide here, motionManager,

1679
01:08:45,365 --> 01:08:49,433
startAccelerometerUpdatesToQu- eue, which is right here,

1680
01:08:49,435 --> 01:08:50,801
this one, okay.

1681
01:08:50,803 --> 01:08:53,937
I have to specify what queue I want these updates to come on,

1682
01:08:53,939 --> 01:08:57,407
so I'm gonna do NSOperationQueue mainQueue.

1683
01:08:57,409 --> 01:09:02,478
And, again, I'm gonna do the swift, put the last argument,

1684
01:09:02,480 --> 01:09:06,848
if it's a closure, outside of the parentheses thing.

1685
01:09:06,850 --> 01:09:09,517
I think there might be a way to do that with some clicking

1686
01:09:09,519 --> 01:09:11,152
magic, but, anyway, here it is.

1687
01:09:11,154 --> 01:09:14,755
Put that up here.

1688
01:09:14,757 --> 01:09:15,622
Oh, I see why.

1689
01:09:15,624 --> 01:09:17,023
Okay.

1690
01:09:17,025 --> 01:09:20,026
So here is the closure, right here.

1691
01:09:20,028 --> 01:09:24,563
And the argument is just the data, so I'm going to call

1692
01:09:24,565 --> 01:09:26,732
that one data, that's the accelerometer data.

1693
01:09:26,734 --> 01:09:30,335
And the error, I'm going to ignore the errors here.

1694
01:09:30,337 --> 01:09:32,170
Probably you shouldn't ignore the errors, but

1695
01:09:32,172 --> 01:09:35,139
in bouncer if I get an error I'm just not going to be

1696
01:09:35,141 --> 01:09:36,424
setting the gravity.

1697
01:09:36,425 --> 01:09:37,708
But there's nothing for me to do, so

1698
01:09:37,710 --> 01:09:40,277
I'm just going to ignore that error, okay?

1699
01:09:40,279 --> 01:09:43,146
And, in fact, can I undo that?

1700
01:09:43,148 --> 01:09:46,315
And say error while you're already inside, okay?

1701
01:09:47,618 --> 01:09:50,019
So here I am.

1702
01:09:50,020 --> 01:09:52,421
Now I just need to set the bouncer behavior's gravity

1703
01:09:52,423 --> 01:09:56,691
equal to this accelerometer data that I got right here,

1704
01:09:56,693 --> 01:09:58,793
which turns out to be very,

1705
01:09:58,795 --> 01:10:01,729
very simple since they're both in G.

1706
01:10:01,731 --> 01:10:05,332
They're in the same units, so it's easy to do.

1707
01:10:05,334 --> 01:10:08,902
I'm just going to say bouncer.gravity,

1708
01:10:08,904 --> 01:10:13,439
which is my gravity behavior, .gravityDirection,

1709
01:10:13,441 --> 01:10:15,874
which is a CGVector.

1710
01:10:15,876 --> 01:10:19,578
Okay, so CGVector has doubles or floats.

1711
01:10:19,580 --> 01:10:23,248
The data from cell rom is actually doubles, not floats.

1712
01:10:23,250 --> 01:10:26,551
So I'm gonna set it as, this as double.

1713
01:10:26,553 --> 01:10:30,754
And it's just the data's acceleration in x.

1714
01:10:30,756 --> 01:10:34,224
I'm gonna set that to be the gravity's acceleration,

1715
01:10:34,226 --> 01:10:35,792
essentially, in x.

1716
01:10:35,794 --> 01:10:39,929
And same thing for y, except for y, since zero is up and

1717
01:10:39,931 --> 01:10:41,830
I want positive.

1718
01:10:42,800 --> 01:10:45,734
Gravity be down, I'm going to say minus data

1719
01:10:45,736 --> 01:10:50,037
acceleration y, okay?

1720
01:10:50,039 --> 01:10:51,572
So that's it,

1721
01:10:51,574 --> 01:10:55,608
I've just set the acceleration due to gravity in the animator

1722
01:10:55,610 --> 01:10:59,679
to the acceleration of the device, okay?

1723
01:10:59,681 --> 01:11:01,980
Now one very important thing to do is,

1724
01:11:01,982 --> 01:11:03,882
I'm starting updates.

1725
01:11:03,884 --> 01:11:06,618
Never put code in the start update unless you put some

1726
01:11:06,620 --> 01:11:09,454
code somewhere to stop it, okay?

1727
01:11:09,456 --> 01:11:11,406
And the place to stop here,

1728
01:11:11,407 --> 01:11:13,357
since I'm doing this in the view did appear the obvious

1729
01:11:13,359 --> 01:11:17,127
place to stop it is view will disappear, okay?

1730
01:11:18,330 --> 01:11:22,165
So whenever this view goes off screen it will stop being

1731
01:11:22,167 --> 01:11:24,033
the eyesore that I'm on which is exactly what I'm on.

1732
01:11:24,035 --> 01:11:27,620
So here I just say.

1733
01:11:27,621 --> 01:11:31,206
AppDelegate.Motion.Manager.st- opAccelerometerUpdates.

1734
01:11:31,208 --> 01:11:33,408
And if it comes back on screen,

1735
01:11:33,410 --> 01:11:37,445
they'll start up again because it's view to appear, okay?

1736
01:11:37,447 --> 01:11:40,281
So if I had like a settings tab and I was going back and

1737
01:11:40,283 --> 01:11:41,315
forth, it would turn it on and

1738
01:11:41,317 --> 01:11:45,185
off as we went back and forth, okay?

1739
01:11:45,187 --> 01:11:48,154
So, see how this works.

1740
01:11:53,194 --> 01:11:55,961
All right, here's our bouncer, okay?

1741
01:11:55,963 --> 01:11:59,531
And see how if I tilt it up, it goes this way.

1742
01:11:59,533 --> 01:12:02,066
And, now, I'm tilting it down, it's going down.

1743
01:12:03,369 --> 01:12:06,670
Right, left, right?

1744
01:12:08,106 --> 01:12:11,140
And that can even kinda use it to get it going faster and

1745
01:12:11,142 --> 01:12:13,242
faster by using the acceleration.

1746
01:12:17,814 --> 01:12:19,731
Okay?

1747
01:12:19,732 --> 01:12:21,649
So you could imagine, I think we might even have made it

1748
01:12:21,651 --> 01:12:25,019
extra credit, make it make your paddle in Breakout.

1749
01:12:25,021 --> 01:12:27,454
Be accelerometer based, right?

1750
01:12:27,456 --> 01:12:28,722
I get the paddle going there.

1751
01:12:28,724 --> 01:12:32,759
Or make the bouncing ball in break out be effected by the.

1752
01:12:32,761 --> 01:12:35,127
I mean probably not this much effect.

1753
01:12:35,129 --> 01:12:37,730
You know, full gravitational effect but somewhat.

1754
01:12:37,732 --> 01:12:41,333
And if I set this down, although this table, I think,

1755
01:12:41,335 --> 01:12:43,635
is tilted a little this way, but.

1756
01:12:43,637 --> 01:12:44,719
See what happens?

1757
01:12:44,720 --> 01:12:45,802
You can see it settling down.

1758
01:12:45,805 --> 01:12:48,105
It's setting down a little because my elasticity is not

1759
01:12:48,107 --> 01:12:50,674
one, it's .85.

1760
01:12:50,676 --> 01:12:56,279
So all these bounce offs are not getting full effect.

1761
01:12:56,281 --> 01:12:59,215
How do you slow this down, there, okay?

1762
01:13:00,618 --> 01:13:02,250
Any questions about that?

1763
01:13:02,252 --> 01:13:03,818
Now I was, I had on the agenda,

1764
01:13:03,820 --> 01:13:05,687
which I obviously didn't even get close to talking to.

1765
01:13:05,689 --> 01:13:07,521
I knew it was going to be a time constraint,

1766
01:13:07,523 --> 01:13:09,056
is persistence.

1767
01:13:09,058 --> 01:13:10,590
I'm actually going to wait, and

1768
01:13:10,592 --> 01:13:12,425
talk about that next Monday.

1769
01:13:12,427 --> 01:13:15,094
On Wednesday, we're going to do MapKits.

1770
01:13:15,096 --> 01:13:18,531
This Friday, the section is on AppleWatch.

1771
01:13:18,533 --> 01:13:21,066
Okay, so that should be a fun one.

1772
01:13:21,068 --> 01:13:23,001
And then next week, in addition to persistence,

1773
01:13:23,003 --> 01:13:24,336
I'll be doing modal segueway.

1774
01:13:24,338 --> 01:13:26,137
Which you already pretty much know how to do because it's

1775
01:13:26,139 --> 01:13:29,006
just alerts for example, or just like mobile segueways.

1776
01:13:29,008 --> 01:13:31,008
But also talk about the camera and then,

1777
01:13:31,010 --> 01:13:32,409
if we have time next week, we'll talk

1778
01:13:32,411 --> 01:13:34,611
about internationalization of your apps.

1779
01:13:34,613 --> 01:13:37,880
It's really important to open your app up to large markets.

1780
01:13:37,882 --> 01:13:39,148
And then settings,

1781
01:13:39,150 --> 01:13:42,251
how to do settings inside the settings app, et cetera.

1782
01:13:42,253 --> 01:13:43,552
So we got a lot of stuff to talk about.

1783
01:13:43,554 --> 01:13:45,453
I'll trying to get to as much of it as I can in

1784
01:13:45,455 --> 01:13:47,755
the last few lectures here, all right?

1785
01:13:47,757 --> 01:13:49,423
If you have questions, I'm here as usual.

1786
01:13:51,060 --> 01:13:51,091
>> For more, please visit us at standford.edu.
